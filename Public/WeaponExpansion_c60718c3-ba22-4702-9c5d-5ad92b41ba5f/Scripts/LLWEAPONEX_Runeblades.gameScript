#INCLUDE LLWEAPONEX_Runeblades_OnHit
#INCLUDE LLWEAPONEX_Runeblades_Combos
#INCLUDE LLWEAPONEX_Runeblades_Chaos

INIT
	USING LLWEAPONEX_Runeblades_OnHit
	USING LLWEAPONEX_Runeblades_Combos
	USING LLWEAPONEX_Runeblades_Chaos
EVENTS

EVENT LLWEAPONEX_Runeblade_BloodStorm_RemoveAura_Start
VARS
	CHARACTER:_Character
ON
	OnCharacterStatusApplied(_Character, LLWEAPONEX_RUNEBLADE_BLOOD_AIR_REGEN_AURA)
ACTIONS
	SetVar(_Character, "LeaderLib_Timer_CompleteEvent", STRING:"LLWEAPONEX_Events_RemoveBloodAirRegenAura")
	SetVar(_Character, "LeaderLib_Timer_Delay", INT:500)
	CharacterEvent(_Character, "LeaderLib_Commands_StartObjectTimer")
	
EVENT LLWEAPONEX_Runeblade_BloodStorm_RemoveAura_End
VARS
	CHARACTER:_Character
ON
	OnCharacterEvent(_Character, "LLWEAPONEX_Events_RemoveBloodAirRegenAura")
ACTIONS
	CharacterRemoveStatus(_Character, LLWEAPONEX_RUNEBLADE_BLOOD_AIR_REGEN_AURA)	
	
EVENT LLWEAPONEX_Runeblade_Dust_Cooldown
VARS
	CHARACTER:_Character
ON
	OnTurnEnded(_Character, _)
	OnCharacterStatusRemoved(_Character, LLWEAPONEX_ACTIVATE_RUNEBLADE_DUST)
	OnDie(_Character, _, _, _)
ACTIONS
IF "c1"
	CharacterHasStatus(_Character, LLWEAPONEX_RUNEBLADE_DUST_COOLDOWN)
THEN
	CharacterRemoveStatus(_Character, LLWEAPONEX_RUNEBLADE_DUST_COOLDOWN)
ENDIF

EVENT LLWEAPONEX_Runeblade_Gas_Cooldown
VARS
	CHARACTER:_Character
ON
	OnTurnEnded(_Character, _)
	OnCharacterStatusRemoved(_Character, LLWEAPONEX_ACTIVATE_RUNEBLADE_GAS)
	OnDie(_Character, _, _, _)
ACTIONS
IF "c1"
	CharacterHasStatus(_Character, LLWEAPONEX_RUNEBLADE_GAS_COOLDOWN)
THEN
	CharacterRemoveStatus(_Character, LLWEAPONEX_RUNEBLADE_GAS_COOLDOWN)
ENDIF

EVENT LLWEAPONEX_Runeblade_Contamination_Removal
VARS
	CHARACTER:_Target
ON
	OnCharacterStatusRemoved(_Target, POISONED)
ACTIONS
IF "c1"
	CharacterHasStatus(_Target, LLWEAPONEX_RUNEBLADE_CONTAMINATION_SPREAD)
THEN
	CharacterRemoveStatus(_Target, LLWEAPONEX_RUNEBLADE_CONTAMINATION_SPREAD)
ENDIF

EVENT LLWEAPONEX_Runeblade_Contamination_Spread
VARS
	CHARACTER:_Target
	CHARACTER:_CheckSource
	CHARACTER:_RuneSource
	INT:_Turns
ON
	OnCharacterStatusApplied(_Target, LLWEAPONEX_RUNEBLADE_CONTAMINATION_CHECK)
ACTIONS
IF "c1&c2&c3"
	CharacterGetStatusSourceCharacter(_Target, LLWEAPONEX_RUNEBLADE_CONTAMINATION_CHECK, _CheckSource)
	CharacterGetStatusSourceCharacter(_CheckSource, LLWEAPONEX_RUNEBLADE_CONTAMINATION_SPREAD, _RuneSource)
	CharacterIsEnemy(_Target, _RuneSource)
THEN
IF "c1&c2"
	GetStatusTurns(_CheckSource, POISONED, _Turns)
	IsGreaterThen(_Turns, 1)
THEN
ELSE
	Set(_Turns, 1)
ENDIF
	IF "!c1"
		CharacterHasStatus(_Target, POISONED)
	THEN
		CharacterApplyStatus(_Target, POISONED, _Turns, 0, _RuneSource)
	ELIF "!c1"
		CharacterHasStatus(_Target, LLWEAPONEX_RUNEBLADE_CONTAMINATION_SPREAD)
	THEN
		CharacterApplyStatus(_Target, LLWEAPONEX_RUNEBLADE_CONTAMINATION_SPREAD, 1, 0, _RuneSource)
	ENDIF
ENDIF

/*
EVENT LLWEAPONEX_Runeblade_Heatburst_Removal
VARS
	CHARACTER:_Target
ON
	OnCharacterStatusRemoved(_Target, BURNING)
ACTIONS
IF "c1"
	CharacterHasStatus(_Target, LLWEAPONEX_RUNEBLADE_HEATBURST_SPREAD)
THEN
	CharacterRemoveStatus(_Target, LLWEAPONEX_RUNEBLADE_HEATBURST_SPREAD)
ENDIF
*/
EVENT LLWEAPONEX_Runeblade_Heatburst_Spread
VARS
	CHARACTER:_Target
	CHARACTER:_CheckSource
	CHARACTER:_RuneSource
	INT:_Turns
ON
	OnCharacterStatusApplied(_Target, LLWEAPONEX_RUNEBLADE_HEATBURST_CHECK)
ACTIONS
IF "c1&c2&c3"
	CharacterGetStatusSourceCharacter(_Target, LLWEAPONEX_RUNEBLADE_HEATBURST_CHECK, _CheckSource)
	CharacterGetStatusSourceCharacter(_CheckSource, LLWEAPONEX_RUNEBLADE_HEATBURST_SPREAD, _RuneSource)
	CharacterIsEnemy(_Target, _RuneSource)
THEN
IF "c1&c2"
	GetStatusTurns(_CheckSource, BURNING, _Turns)
	IsGreaterThen(_Turns, 1)
THEN
	//Add(_Turns, 1)
	//CharacterApplyStatus(_CheckSource, BURNING, _Turns, 1, _RuneSource)
ELSE
	Set(_Turns, 1)
ENDIF
	IF "!c1"
		CharacterHasStatus(_Target, BURNING)
	THEN
		CharacterPlayEffect(_Target, "LLWEAPONEX_FX_Status_Heatburst_Check_01", "Dummy_BodyFX")
		CharacterEvent(_Target, "LLWEAPONEX_Runeblade_PlayHeatBurstCheckSound")
		CharacterApplyStatus(_Target, BURNING, _Turns, 0, _RuneSource)
	ELIF "!c1"
		CharacterHasStatus(_Target, LLWEAPONEX_RUNEBLADE_HEATBURST_SPREAD)
	THEN
		CharacterApplyStatus(_Target, LLWEAPONEX_RUNEBLADE_HEATBURST_SPREAD, 1, 0, _RuneSource)
	ENDIF
ENDIF

/*
// May be preferencial to ignore special combo rune activations like this, so real combos are saved in the echo
EVENT LLWEAPONEX_Runeblade_LastRuneStatus_Special_Ice
VARS
	CHARACTER:_Character
ON
	OnSkillCast(_Character, Shout_LLWEAPONEX_ActivateRuneblade_Ice)
ACTIONS
	SetVar(_Character, "LLWEAPONEX_Runeblade_LastRuneStatus", STATUS:LLWEAPONEX_ACTIVATE_RUNEBLADE_ICE)
*/

EVENT LLWEAPONEX_Runeblade_Reverb
VARS
	CHARACTER:_Character
	LIST<STATUS>:_RemoveList
	STATUS:_Result
	INT:_Turns
	INT:_TurnsLeft
	STATUS:_LastRuneStatus
ON
	FetchCharacterApplyStatusData(_Character, LLWEAPONEX_ACTIVATE_RUNEBLADE_REVERB)
ACTIONS
	Set(_Result, null)
	Set(_Turns, null)
IF "c1&!c2"
	GetVar(_LastRuneStatus, _Character, "LLWEAPONEX_Runeblade_LastRuneStatus")
	IsEqual(_LastRuneStatus, null)
THEN
	Set(_Result, _LastRuneStatus)
	Set(_Turns, 2)
	StatusText(_Character, "LLWEAPONEX_Skills_RunicReverb_Success")
	PlaySound(_Character, "Skill_Summon_SwapPlaces_Impact")
ELSE
	StatusText(_Character, "LLWEAPONEX_Skills_RunicReverb_Failed")
	PlaySound(_Character, "UI_Game_Persuasion_Failure")
ENDIF
	RETURN(_RemoveList, _Result, _Turns)

EVENT LLWEAPONEX_Runeblade_Unequipped
VARS
	CHARACTER:_Player
	ITEM:_Runeblade
	ITEM:_Mainhand
	ITEM:_Offhand
	INT:_RemoveAll
	LIST<STATUS>:_RemoveList
	INT:_Index
	INT:_Size
	STATUS:_RemoveStatus
ON
	OnItemUnequipped(_Player, _Runeblade)
ACTIONS
IF "c1&!c2"
	IsTagged(_Runeblade, "LLWEAPONEX_Runeblade")
	IsTagged(_Runeblade, "LLWEAPONEX_Runeblade_Inert")
THEN
	//No Runeblades Equipped
	IF "(!c1|c1&!c2)&(!c3|c3|!c4)"
		CharacterGetEquippedItem(_Player, "Weapon", _Mainhand)
		IsTagged(_Mainhand, "LLWEAPONEX_Runeblade")
		CharacterGetEquippedItem(_Player, "Shield", _Offhand)
		IsTagged(_Offhand, "LLWEAPONEX_Runeblade")
	THEN
		Set(_RemoveAll, 1)
	ENDIF
	
	IF "c1|c2"
		IsTagged(_Runeblade, "LLWEAPONEX_Runeblade_Air")
		IsEqual(_RemoveAll, 1)
	THEN
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_AIR)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_THUNDERBOLT)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_CONDUCTION)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_DUST)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_GAS)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_HEATBURST)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_AIR)
	ENDIF
	
	IF "c1|c2"
		IsTagged(_Runeblade, "LLWEAPONEX_Runeblade_Earth")
		IsEqual(_RemoveAll, 1)
	THEN
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_EARTH)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_QUAKE)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_DUST)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_TAR)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_LAVA)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_AVALANCHE)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_EARTH)
	ENDIF
	
	IF "c1|c2"
		IsTagged(_Runeblade, "LLWEAPONEX_Runeblade_Fire")
		IsEqual(_RemoveAll, 1)
	THEN
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_FIRE)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_INFERNO)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_EXPLOSIVE)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_LAVA)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_HEATBURST)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_SEARING)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_FIRE)
	ENDIF
	
	IF "c1|c2"
		IsTagged(_Runeblade, "LLWEAPONEX_Runeblade_Poison")
		IsEqual(_RemoveAll, 1)
	THEN
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_POISON)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_VENOM)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_EXPLOSIVE)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_CONTAMINATION)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_GAS)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_TAR)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_POISON)
	ENDIF
	
	IF "c1|c2"
		IsTagged(_Runeblade, "LLWEAPONEX_Runeblade_Water")
		IsEqual(_RemoveAll, 1)
	THEN
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_WATER)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_ICE)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_AVALANCHE)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_CONDUCTION)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_CONTAMINATION)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_SEARING)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_WATER)
	ENDIF
	
	IF "c1|c2"
		IsTagged(_Runeblade, "LLWEAPONEX_Runeblade_Chaos")
		IsEqual(_RemoveAll, 1)
	THEN
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_PLUS)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_POISON)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_EARTH)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_FIRE)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_AIR)
		ListAdd(_RemoveList, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_WATER)
	ENDIF
	
	IF "c1"
		ListGetSize(_RemoveList, _Size)
	THEN
		Set(_Index, 1)
		WHILE "!c1"
			IsGreaterThen(_Index, _Size)
		DO
			IF "c1&c2"
				ListGet(_RemoveList, _Index, _RemoveStatus)
				CharacterHasStatus(_Player, _RemoveStatus)
			THEN
				CharacterRemoveStatus(_Player, _RemoveStatus)
			ENDIF
		Add(_Index, 1)
		ENDWHILE
	ENDIF
	
ENDIF