Version 1
SubGoalCombiner SGC_AND
INITSECTION
LeaderLib_Statuses_Register_PermanentStatus("WeaponExpansion", "ArmCannon", "LLWEAPONEX_ARMCANNON_CHARGED", "LLWEAPONEX_ArmCannon_FullyCharged");

KBSECTION

//REGION EQUIP_EVENTS
PROC
LeaderLib_LoadingDone((STRING)_Region)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
AND
GetVarInteger(_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", _Energy)
AND
GetUUID(_ArmCannon, _UUID)
THEN
ObjectClearFlag(_Char, "LLWEAPONEX_ArmCannon_BlockEnergyGain", 0);
LLWEAPONEX_ArmCannon_SetEnergyTags(_Char, _ArmCannon, _Energy);
NRD_ModCall("WeaponExpansion", "ArmCannon_SyncData", _UUID);

IF
ItemTemplateEquipped("EQ_UNIQUE_LLWEAPONEX_ArmCannon_A_8a02d95d-dd91-4d97-9265-c3254923f9ee", _Char)
AND
CharacterGetEquippedItem(_Char, "Gloves", (ITEMGUID)_ArmCannon)
THEN
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon);
LLWEAPONEX_ArmCannon_OnEquipped(_Char, _ArmCannon);

IF
ItemTemplateUnEquipped("EQ_UNIQUE_LLWEAPONEX_ArmCannon_A_8a02d95d-dd91-4d97-9265-c3254923f9ee", _Char)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
THEN
LLWEAPONEX_ArmCannon_OnUnequipped(_Char, _ArmCannon);
NOT DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon);

PROC
LLWEAPONEX_ArmCannon_OnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
AND
CharacterIsPlayer(_Char, _ShowNotification)
THEN
CharacterAddSkill(_Char, "Projectile_LLWEAPONEX_ArmCannon_Shoot", _ShowNotification);
CharacterAddSkill(_Char, "Zone_LLWEAPONEX_ArmCannon_Disperse", _ShowNotification);

PROC
LLWEAPONEX_ArmCannon_OnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
AND
NOT GetVarInteger(_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", _)
THEN
SetVarInteger(_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", 0);

PROC
LLWEAPONEX_ArmCannon_OnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
AND
GetVarInteger(_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", _Energy)
THEN
LLWEAPONEX_ArmCannon_SetEnergyTags(_Char, _ArmCannon, _Energy);

PROC
LLWEAPONEX_ArmCannon_SetEnergyTags((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon, (INTEGER)_Energy)
AND
_Energy > 0
AND
GetUUID(_Char, _UUID)
THEN
LeaderLib_Tags_PreserveTag(_Char, "LLWEAPONEX_ArmCannon_EnergyAvailable");
NRD_ModCall("LeaderLib", "SetSkillEnabled", _UUID, "Projectile_LLWEAPONEX_ArmCannon_Shoot", "true");

PROC
LLWEAPONEX_ArmCannon_SetEnergyTags((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon, (INTEGER)_Energy)
AND
NRD_StatGetExtraData("LLWEAPONEX_RunicCannon_MaxEnergy", _MaxR)
AND
Integer(_MaxR, _Max)
AND
_Energy >= _Max
AND
GetUUID(_Char, _UUID)
THEN
LeaderLib_Tags_PreserveTag(_Char, "LLWEAPONEX_ArmCannon_FullyCharged");
LeaderLib_Statuses_ApplyPermanentStatus(_Char, "LLWEAPONEX_ARMCANNON_CHARGED", 1);
NRD_ModCall("LeaderLib", "SetSkillEnabled", _UUID, "Zone_LLWEAPONEX_ArmCannon_Disperse", "true");

PROC
LLWEAPONEX_ArmCannon_SetEnergyTags((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon, 0)
AND
GetUUID(_Char, _UUID)
THEN
LeaderLib_Tags_ClearPreservedTag(_Char, "LLWEAPONEX_ArmCannon_FullyCharged");
LeaderLib_Tags_ClearPreservedTag(_Char, "LLWEAPONEX_ArmCannon_EnergyAvailable");
LeaderLib_Statuses_RemovePermanentStatus(_Char, "LLWEAPONEX_ARMCANNON_CHARGED");
NRD_ModCall("LeaderLib", "SetSkillEnabled", _UUID, "Projectile_LLWEAPONEX_ArmCannon_Shoot", "false");
NRD_ModCall("LeaderLib", "SetSkillEnabled", _UUID, "Zone_LLWEAPONEX_ArmCannon_Disperse", "false");

PROC
LLWEAPONEX_ArmCannon_OnUnequipped((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
THEN
CharacterRemoveSkill(_Char, "Zone_LLWEAPONEX_ArmCannon_Disperse");
CharacterRemoveSkill(_Char, "Projectile_LLWEAPONEX_ArmCannon_Shoot");
LeaderLib_Tags_ClearPreservedTag(_Char, "LLWEAPONEX_ArmCannon_FullyCharged");
LeaderLib_Tags_ClearPreservedTag(_Char, "LLWEAPONEX_ArmCannon_EnergyAvailable");
LeaderLib_Statuses_RemovePermanentStatus(_Char, "LLWEAPONEX_ARMCANNON_CHARGED");

PROC
LLWEAPONEX_ArmCannon_OnUnequipped((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
AND
GetVarObject(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon", (ITEMGUID)_ArmCannonWeapon)
THEN
ItemLockUnEquip(_ArmCannonWeapon, 0);
CharacterUnequipItem(_Char, _ArmCannonWeapon);
ItemToInventory(_ArmCannonWeapon, _ArmCannon, 1, 0, 0);
//END_REGION

//REGION ARM_CANNON_WEAPON
PROC
LLWEAPONEX_ArmCannon_OnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
AND
NOT LeaderLib_Variables_QRY_ObjectVariableSet(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon")
AND
CharacterGetEquippedItem(_Char, "Weapon", (ITEMGUID)_Item)
AND
GetTemplate(_Item, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_3b11f892-f6ae-43c8-af73-bcdf5abf64ec")
THEN
SetVarObject(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon", _Item);

PROC
LLWEAPONEX_ArmCannon_OnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
AND
LeaderLib_Variables_QRY_ObjectVariableSet(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon")
THEN
LLWEAPONEX_ArmCannon_EquipCannonWeapon(_Char, _ArmCannon);

PROC
LLWEAPONEX_ArmCannon_OnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
AND
NOT LeaderLib_Variables_QRY_ObjectVariableSet(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ArmCannon] No arm cannon weapon found. Iterating.");
//InventoryLaunchTemplateIterator(_ArmCannon, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_3b11f892-f6ae-43c8-af73-bcdf5abf64ec", "LLWEAPONEX_Iterator_ArmCannonWeaponFound", "");
InventoryLaunchIterator(_ArmCannon, "LLWEAPONEX_Iterator_ArmCannonWeaponFound", "");
LeaderLib_Timers_StartCharacterItemTimer(_Char, _ArmCannon, 250, "LLWEAPONEX_Timers_ArmCannonIteratorDone", "LLWEAPONEX_ArmCannonIteratorDone");

IF
StoryEvent((ITEMGUID)_ArmCannonWeapon, "LLWEAPONEX_Iterator_ArmCannonWeaponFound")
AND
GetTemplate(_ArmCannonWeapon, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_3b11f892-f6ae-43c8-af73-bcdf5abf64ec")
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ArmCannon(Iterator)] Found the arm cannon weapon inside the arm cannon glove. Setting var and equipping.");
SetVarObject(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon", _ArmCannonWeapon);

IF
StoryEvent((ITEMGUID)_Item, "LLWEAPONEX_Iterator_ArmCannonWeaponFound")
AND
String(_Item, _Str)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ArmCannon(Iterator)] Found [",_Str,"] in arm cannon.");

IF
CharacterItemEvent(_Char, _ArmCannon, "LLWEAPONEX_ArmCannonIteratorDone")
AND
LeaderLib_Variables_QRY_ObjectVariableSet(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ArmCannon(Iterator)] Var was set. Equipping.");
LLWEAPONEX_ArmCannon_EquipCannonWeapon(_Char, _ArmCannon);

IF
CharacterItemEvent(_Char, _ArmCannon, "LLWEAPONEX_ArmCannonIteratorDone")
AND
NOT LeaderLib_Variables_QRY_ObjectVariableSet(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon")
AND
GetPosition(_Char, _x, _y, _z)
AND
CreateItemTemplateAtPosition("WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_3b11f892-f6ae-43c8-af73-bcdf5abf64ec", _x, _y, _z, _ArmCannonWeapon)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ArmCannon(Iterator)] Var was not set. Created a new arm cannon weapon. Equipping.");
SetVarObject(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon", _ArmCannonWeapon);
LLWEAPONEX_ArmCannon_EquipCannonWeapon(_Char, _ArmCannon);

QRY
LLWEAPONEX_ArmCannon_QRY_UnequipCurrentWeapon((CHARACTERGUID)_Char)
AND
NOT LeaderLib_Helper_QRY_HasItemInSlot(_Char, "Weapon")
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_ArmCannon_QRY_UnequipCurrentWeapon((CHARACTERGUID)_Char)
AND
CharacterGetEquippedItem(_Char, "Weapon", (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
ItemIsLocked(_Item, 0)
AND
NOT GetTemplate(_Item, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_3b11f892-f6ae-43c8-af73-bcdf5abf64ec")
THEN
CharacterUnequipItem(_Char, _Item);
ItemToInventory(_Item, _Char, 1, 0, 0);

QRY
LLWEAPONEX_ArmCannon_QRY_UnequipCurrentWeapon((CHARACTERGUID)_Char)
AND
NOT DB_GlobalFlag("LLWEAPONEX_ArmCannonRestrictionsDisabled")
AND
CharacterGetEquippedItem(_Char, "Shield", (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
NRD_ItemGetStatsId(_Item, _Stat)
AND
NRD_StatGetString(_Stat, "ItemType", "Weapon")
THEN
ItemLockUnEquip(_Item, 0);
CharacterUnequipItem(_Char, _Item);
ItemToInventory(_Item, _Char, 1, 0, 0);

PROC
LLWEAPONEX_ArmCannon_EquipCannonWeapon((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
AND
LLWEAPONEX_ArmCannon_QRY_UnequipCurrentWeapon(_Char)
AND
GetVarObject(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon", (ITEMGUID)_ArmCannonWeapon)
THEN
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipSuccess(_Char, _ArmCannon);
NRD_CharacterEquipItem(_Char, _ArmCannonWeapon, "Weapon", 0, 0, 1, 1);
ItemLockUnEquip(_ArmCannonWeapon, 1);

PROC
LLWEAPONEX_ArmCannon_EquipCannonWeapon((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
AND
NOT DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipSuccess(_Char, _ArmCannon)
THEN
//Locked weapon in mainhand?
CharacterUnequipItem(_Char, _ArmCannon);

PROC
LLWEAPONEX_ArmCannon_EquipCannonWeapon((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipSuccess(_Char, _ArmCannon)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipSuccess(_Char, _ArmCannon);
//END_REGION

//REGION TRANSFORMED_ITEMCOMBO
IF
ItemTemplateCombinedWithItemTemplate(_,_,_,_,_,_Char,_Item)
AND
GetTemplate(_Item, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_3b11f892-f6ae-43c8-af73-bcdf5abf64ec")
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
THEN
SetVarObject(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon", _Item);
LLWEAPONEX_ArmCannon_EquipCannonWeapon(_Char, _ArmCannon);
//END_REGION

//REGION ARM_CANNON_BLOCK_OFFHAND_WEAPON
PROC
ProcBlockUseOfItem((CHARACTERGUID)_Char, (ITEMGUID)_Weapon)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
AND
ItemIsEquipable(_Weapon, 1)
AND
NOT DB_GlobalFlag("LLWEAPONEX_ArmCannonRestrictionsDisabled")
AND
NOT GetTemplate(_Weapon, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_3b11f892-f6ae-43c8-af73-bcdf5abf64ec")
AND
LLWEAPONEX_QRY_ItemIsWeapon(_Char, _Weapon)
THEN
DB_CustomUseItemResponse(_Char, _Weapon, 0);
ShowNotification(_Char, "LLWEAPONEX_Notifications_ArmCannonShieldBlocked");
//END_REGION

//REGION ARM_CANNON_MECHANICS
PROC
LLWEAPONEX_ArmCannon_BlockNextEnergyGain((CHARACTERGUID)_Char, (INTEGER)_Delay)
THEN
ObjectSetFlag(_Char, "LLWEAPONEX_ArmCannon_BlockEnergyGain", 0);
LeaderLib_Timers_StartObjectTimer(_Char, _Delay, "LLWEAPONEX_Timers_ArmCannon_ClearBlockEnergy", "LLWEAPONEX_ArmCannon_ClearBlockEnergy");

IF
StoryEvent(_Char, "LLWEAPONEX_ArmCannon_ClearBlockEnergy")
THEN
ObjectClearFlag(_Char, "LLWEAPONEX_ArmCannon_BlockEnergyGain", 0);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_ARMCANNON_HIT", (CHARACTERGUID)_Char)
THEN
LLWEAPONEX_ArmCannon_OnHit(_Char, _Target);

PROC
LLWEAPONEX_ArmCannon_OnHit((CHARACTERGUID)_Char, (CHARACTERGUID)_Target)
AND
ObjectGetFlag(_Char, "LLWEAPONEX_ArmCannon_BlockEnergyGain", 0)
AND
CharacterIsEnemy(_Char, _Target, _A)
AND
IsTagged(_Target, "LLDUMMY_TrainingDummy", _B)
AND
IntegerMax(_A, _B, 1)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
AND
NRD_StatGetExtraData("LLWEAPONEX_RunicCannon_MaxEnergy", _MaxR)
AND
Integer(_MaxR, _Max)
THEN
LeaderLib_Variables_ModifyVariableInt(_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", 1, _Max);

PROC
LeaderLib_Variables_OnVariableIntChanged((ITEMGUID)_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", (INTEGER)_LastValue, (INTEGER)_NextValue)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
AND
GetUUID(_Char, _UUID)
AND
GetUUID(_ArmCannon, _ItemUUID)
AND
NRD_IntegerToString(_LastValue, _Last)
AND
NRD_IntegerToString(_NextValue, _Next)
THEN
LLWEAPONEX_ArmCannon_SetEnergyTags(_Char, _ArmCannon, _NextValue);
NRD_ModCall("WeaponExpansion", "ArmCannon_OnEnergyChanged", _UUID, _ItemUUID, _Last, _Next);

PROC
LeaderLib_Variables_OnVariableIntChanged((ITEMGUID)_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", (INTEGER)_LastValue, (INTEGER)_NextValue)
AND
GetUUID(_ArmCannon, _UUID)
THEN
NRD_ModCall("WeaponExpansion", "ArmCannon_SyncData", _UUID);
//END_REGION

//REGION SKILL_USES
IF
SkillCast(_Char, "Projectile_LLWEAPONEX_ArmCannon_Shoot", _, _)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
THEN
LeaderLib_Variables_ModifyVariableInt(_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", -1);
LLWEAPONEX_ArmCannon_BlockNextEnergyGain(_Char, 750);

IF
SkillCast(_Char, "Zone_LLWEAPONEX_ArmCannon_Disperse", _, _)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
THEN
LLWEAPONEX_ArmCannon_BlockNextEnergyGain(_Char, 750);
LeaderLib_Variables_SetVariableInt(_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", 0);
ProcObjectTimer(_Char, "Timers_LLWEAPONEX_RunicCannonDisperse_Explode", 1000);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "Timers_LLWEAPONEX_RunicCannonDisperse_Explode")
AND
GetUUID(_Char, _UUID)
THEN
NRD_ModCall("WeaponExpansion", "ArmCannon_DisperseCast", _UUID);

IF
CharacterUsedSkillAtPosition(_Char, _x, _y, _z, "Target_LLWEAPONEX_ArmCannon_AbsorbSurface", _, _)
THEN
SetVarFloat3(_Char, "LLWEAPONEX_SurfaceAbsorbPosition", _x, _y, _z);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_00_PostCC"