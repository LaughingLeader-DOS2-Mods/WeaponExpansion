Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLWEAPONEX_Throwing_InitSettings();
KBSECTION
//REGION SETTINGS
PROC
LLWEAPONEX_Throwing_InitSettings()
THEN
DB_LLWEAPONEX_Throwing_KevinSkills("Projectile_LLWEAPONEX_Throw_Rock_Kevin");
DB_LLWEAPONEX_Throwing_KevinSkills("Projectile_LLWEAPONEX_Throw_Rock_Kevin_Poison");
DB_LLWEAPONEX_Throwing_KevinSkills("Projectile_LLWEAPONEX_Throw_Rock_Kevin_Oil");
DB_LLWEAPONEX_Throwing_KevinSkills("Projectile_LLWEAPONEX_Throw_Rock_Kevin_Nails");

DB_LLWEAPONEX_Throwing_ReturnSkill("Projectile_LLWEAPONEX_ShieldToss", "Projectile_LLWEAPONEX_ShieldToss_Returned", "LLWEAPONEX_COMBAT_SHIELD_HIT", 3, "LLWEAPONEX_Timers_ShieldTossTimeout", 1000);

DB_LLWEAPONEX_Throwing_ReturnSkillTags("Projectile_LLWEAPONEX_ShieldToss_Returned", "LLWEAPONEX_ShieldToss_Caster");
//END_REGION

//REGION KEVIN_THROWN
IF
CharacterUsedSkillOnTarget(_Character, _Target, _Skill, _, _)
AND
DB_LLWEAPONEX_Throwing_KevinSkills(_Skill)
AND
NOT DB_LLWEAPONEX_Throwing_Temp_KevinIterator(_Character, _, _, _)
AND
GetUUID(_Character, _UUID)
AND
StringConcatenate("LLWEAPONEX_Throwing_KevinTargetFound_", _UUID, _Event)
THEN
DB_LLWEAPONEX_Throwing_Temp_KevinIterator(_Character, _Target, _Event, 1);
CharacterLaunchIteratorAroundObject(_Target, 5.0, _Event);

IF
StoryEvent((CHARACTERGUID)_Target, _IteratorEvent)
AND
DB_LLWEAPONEX_Throwing_Temp_KevinIterator(_Character, _InitialTarget, _IteratorEvent, _TotalTargets)
AND
_Target != _InitialTarget
AND
CharacterIsEnemy(_Character, _Target, 1)
AND
IntegerSum(_TotalTargets, 1, _NextCount)
AND
_NextCount < 4 // 3 forks max
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_KevinIterator(_Character, _InitialTarget, _IteratorEvent, _TotalTargets);
DB_LLWEAPONEX_Throwing_Temp_KevinIterator(_Character, _InitialTarget, _IteratorEvent, _NextCount);

IF
SkillCast(_Player, "Projectile_LLWEAPONEX_Throw_Rock_Kevin", _, _)
THEN
ProcObjectTimer(_Player, "LLWEAPONEX_Timers_ShootKevinReturnEffect", 1000);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_HIT_BY_KEVIN", (CHARACTERGUID)_Player)
AND
_Player != NULL_00000000-0000-0000-0000-000000000000
THEN
LLWEAPONEX_Throwing_SetKevinReturnTarget(_Player, _Target);

PROC
LLWEAPONEX_Throwing_SetKevinReturnTarget((CHARACTERGUID)_Player, (CHARACTERGUID)_Target)
AND
NOT DB_LLWEAPONEX_Throwing_Temp_KevinReturnTarget(_Player, _, _)
THEN
LLWEAPONEX_Throwing_Internal_SetKevinReturnTarget(_Player, _Target, 0);

PROC
LLWEAPONEX_Throwing_SetKevinReturnTarget((CHARACTERGUID)_Player, (CHARACTERGUID)_Target)
AND
DB_LLWEAPONEX_Throwing_Temp_KevinReturnTarget(_Player, _OtherTarget, _Count)
AND
IntegerSum(_Count, 1, _NextCount)
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_KevinReturnTarget(_Player, _OtherTarget, _Count);
LLWEAPONEX_Throwing_Internal_SetKevinReturnTarget(_Player, _Target, _NextCount);

PROC
LLWEAPONEX_Throwing_Internal_SetKevinReturnTarget((CHARACTERGUID)_Player, (CHARACTERGUID)_Target, (INTEGER)_Count)
THEN
DB_LLWEAPONEX_Throwing_Temp_KevinReturnTarget(_Player, _Target, _Count);

PROC
LLWEAPONEX_Throwing_Internal_SetKevinReturnTarget((CHARACTERGUID)_Player, (CHARACTERGUID)_Target, (INTEGER)_Count)
AND
DB_LLWEAPONEX_Throwing_Temp_KevinIterator(_Character, _InitialTarget, _IteratorEvent, _TotalTargets)
AND
_Count < _TotalTargets
THEN
ProcObjectTimerCancel(_Player, "LLWEAPONEX_Timers_ShootKevinReturnEffect");
ProcObjectTimer(_Player, "LLWEAPONEX_Timers_ShootKevinReturnEffect", 300);

PROC
LLWEAPONEX_Throwing_Internal_SetKevinReturnTarget((CHARACTERGUID)_Player, (CHARACTERGUID)_Target, (INTEGER)_Count)
AND
DB_LLWEAPONEX_Throwing_Temp_KevinIterator(_Character, _InitialTarget, _IteratorEvent, _TotalTargets)
AND
_Count >= _TotalTargets
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_KevinReturnTarget(_Player, _Target, _Count);
ProcObjectTimerCancel(_Player, "LLWEAPONEX_Timers_ShootKevinReturnEffect");
CharacterCharacterSetEvent(_Player, _Target, "LLWEAPONEX_Events_ReturnKevin");

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLWEAPONEX_Timers_ShootKevinReturnEffect")
AND
DB_LLWEAPONEX_Throwing_Temp_KevinReturnTarget(_Player, _Target, _Count)
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_KevinReturnTarget(_Player, _Target, _Count);
//CharacterUseSkill(_Target, "Projectile_LLWEAPONEX_Throw_Rock_Kevin_Effect", _Player, 1, 1, 1);
CharacterCharacterSetEvent(_Player, _Target, "LLWEAPONEX_Events_ReturnKevin");

/*
IF
DB_LLWEAPONEX_Throwing_Temp_KevinReturnTarget(_Player, _Target, _Count)
AND
IntegertoString(_Count, _CountStr)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Throwing:KevinReturnTarget] Hit count: [",_CountStr,"].");

IF
DB_LLWEAPONEX_Throwing_Temp_KevinIterator(_Character, _InitialTarget, _IteratorEvent, _TotalTargets)
AND
IntegertoString(_TotalTargets, _CountStr)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Throwing:KevinIterator] Total targets: [",_CountStr,"](",_IteratorEvent,").");
*/

IF
CharacterCharacterEvent(_Character, _Target, "LLWEAPONEX_Events_ReturnKevin")
//CharacterStatusAttempt(_Character, "LLWEAPONEX_KEVIN_RETURNED", _)
AND
DB_LLWEAPONEX_Throwing_Temp_KevinIterator(_Character, _InitialTarget, _IteratorEvent, _TotalTargets)
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_KevinIterator(_Character, _InitialTarget, _IteratorEvent, _TotalTargets);
//CharacterStatusText(_Character, "LLWEAPONEX_CaughtKevin");
//PlayAnimation(_Player, "use_activate", "");
//END_REGION

//REGION KEVIN_ENERGY
IF
CharacterItemEvent(_Player, _Kevin, "LLWEAPONEX_ReducedKevinEnergy")
AND
GetVarInteger(_Kevin, "LLWEAPONEX_Kevin_CurrentEnergy", _Energy)
AND
GetVarInteger(_Kevin, "LLWEAPONEX_Kevin_MaxEnergy", _MaxEnergy)
AND
IntegertoString(_MaxEnergy, _MaxStr)
AND
IntegertoString(_Energy, _EnergyStr)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Throwing:ModifyKevinEnergy] Kevin's current energy: [",_EnergyStr,"/",_MaxStr,"].");

IF
CharacterItemEvent(_Player, _Kevin, "LLWEAPONEX_RechargeComplete")
AND
GetVarInteger(_Kevin, "LLWEAPONEX_Kevin_CurrentEnergy", _Energy)
AND
GetVarInteger(_Kevin, "LLWEAPONEX_Kevin_MaxEnergy", _MaxEnergy)
AND
IntegertoString(_MaxEnergy, _MaxStr)
AND
IntegertoString(_Energy, _EnergyStr)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Throwing:ModifyKevinEnergy] Kevin's current energy: [",_EnergyStr,"/",_MaxStr,"].");

IF
CharacterItemEvent(_Player, _Kevin, "LLWEAPONEX_KevinIsExausted")
AND
GetTemplate(_Kevin, _Template)
THEN
DB_LLWEAPONEX_Temp_KevinOriginalForm(_Kevin, _Template);
Transform(_Kevin, "THR_UNIQUE_LLWEAPONEX_Rock_Kevin_Disabled_9b6ea03d-801b-438d-a7c7-a6b9575c1043", 0, 0, 1);

IF
CharacterItemEvent(_Player, _Kevin, "LLWEAPONEX_KevinIsRestored")
AND
DB_LLWEAPONEX_Temp_KevinOriginalForm(_Kevin, _Template)
THEN
NOT DB_LLWEAPONEX_Temp_KevinOriginalForm(_Kevin, _Template);
Transform(_Kevin, _Template, 0, 0, 1);

//END_REGION

//REGION KEVIN_UPDATE
IF
ItemTemplateAddedToCharacter(ITEMGUID_THR_UNIQUE_LLWEAPONEX_Rock_Kevin_Normal_b3fc8995-8c7c-4de5-b465-e2573334cff7, _Item, _Character)
AND
ObjectExists(_Item, 1)
AND
IsTagged(_Item, "LLWEAPONEX_KevinThePetRock", 0)
THEN
SetTag(_Item, "LLWEAPONEX_KevinThePetRock");

/*
PROC
LeaderLib_Mods_OnVersionChanged(c60718c3-ba22-4702-9c5d-5ad92b41ba5f, (INTEGER)_LastVersion, (INTEGER)_NextVersion)
AND
CharacterGetHostCharacter(_Player)
AND
GetItemForItemTemplateInPartyInventory(_Player, "THR_UNIQUE_LLWEAPONEX_Rock_Kevin_Normal_b3fc8995-8c7c-4de5-b465-e2573334cff7", _Item)
AND
IsTagged(_Item, "LLWEAPONEX_KevinThePetRock", 0)
THEN
SetTag(_Item, "LLWEAPONEX_KevinThePetRock");

PROC
LeaderLib_Mods_OnVersionChanged(c60718c3-ba22-4702-9c5d-5ad92b41ba5f, (INTEGER)_LastVersion, (INTEGER)_NextVersion)
AND
GetItemForItemTemplateInInventory(CHARACTERGUID_S_LLWEAPONEX_VendingMachine_A_680d2702-721c-412d-b083-4f5e816b945a, "THR_UNIQUE_LLWEAPONEX_Rock_Kevin_Normal_b3fc8995-8c7c-4de5-b465-e2573334cff7", _Item)
AND
IsTagged(_Item, "LLWEAPONEX_KevinThePetRock", 0)
THEN
SetTag(_Item, "LLWEAPONEX_KevinThePetRock");
*/
//END_REGION

//REGION COMBAT_SHIELD_TOSS
IF
CharacterUsedSkillOnTarget(_Character, _Target, "Projectile_LLWEAPONEX_ShieldToss", _, _)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill("Projectile_LLWEAPONEX_ShieldToss", _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
AND
_MaxTargets > 1
AND
NOT DB_LLWEAPONEX_Throwing_Temp_ForkIterator("Projectile_LLWEAPONEX_ShieldToss", _Character, _, _, _)
AND
GetUUID(_Character, _UUID)
AND
StringConcatenate("LLWEAPONEX_Throwing_", "Projectile_LLWEAPONEX_ShieldToss", _Str1)
AND
StringConcatenate(_Str1, _UUID, _Event)
THEN
DB_LLWEAPONEX_Throwing_Temp_ForkIterator("Projectile_LLWEAPONEX_ShieldToss", _Character, _Target, _Event, 1);
CharacterLaunchIteratorAroundObject(_Target, 6.0, _Event);

IF
CharacterUsedSkillAtPosition(_Character, _x, _y, _z, "Projectile_LLWEAPONEX_ShieldToss", _, _)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill("Projectile_LLWEAPONEX_ShieldToss", _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
THEN
SetVarFloat3(_Character, "LLWEAPONEX_ReturnSkillFallbackPosition", _x, _y, _z);

IF
StoryEvent((CHARACTERGUID)_Target, _IteratorEvent)
AND
DB_LLWEAPONEX_Throwing_Temp_ForkIterator(_ShootSkill, _Character, _InitialTarget, _IteratorEvent, _TotalTargets)
AND
_Target != _InitialTarget
AND
CharacterIsEnemy(_Character, _Target, 1)
AND
IntegerSum(_TotalTargets, 1, _NextCount)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill(_ShootSkill, _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
AND
_NextCount <= _MaxTargets
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_ForkIterator(_ShootSkill, _Character, _InitialTarget, _IteratorEvent, _TotalTargets);
DB_LLWEAPONEX_Throwing_Temp_ForkIterator(_ShootSkill, _Character, _InitialTarget, _IteratorEvent, _NextCount);

IF
SkillCast(_Character, "Projectile_LLWEAPONEX_ShieldToss", _, _)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill("Projectile_LLWEAPONEX_ShieldToss", _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
THEN
DB_LLWEAPONEX_Throwing_Temp_SkillNotReturned(_Character, "Projectile_LLWEAPONEX_ShieldToss", _ReturnSkill);

IF
DB_LLWEAPONEX_Throwing_Temp_SkillNotReturned(_Character, _ShootSkill, _ReturnSkill)
AND
DB_LLWEAPONEX_Throwing_ReturnSkillTags(_ReturnSkill, _Tag)
THEN
SetTag(_Character, _Tag);

IF
SkillCast(_Character, "Projectile_LLWEAPONEX_ShieldToss", _, _)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill("Projectile_LLWEAPONEX_ShieldToss", _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
AND
DB_LLWEAPONEX_Throwing_Temp_ForkIterator("Projectile_LLWEAPONEX_ShieldToss", _Character, _InitialTarget, _IteratorEvent, _TotalTargets)
THEN
ProcObjectTimerCancel(_Character, _TimerName);
ProcObjectTimer(_Character, _TimerName, _Timeout);

IF
SkillCast(_Character, "Projectile_LLWEAPONEX_ShieldToss", _, _)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill("Projectile_LLWEAPONEX_ShieldToss", _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
AND
NOT DB_LLWEAPONEX_Throwing_Temp_ForkIterator("Projectile_LLWEAPONEX_ShieldToss", _Character, _, _, _)
AND
IntegerDivide(_Timeout, 2, _NewTimeout)
THEN
ProcObjectTimerCancel(_Character, _TimerName);
ProcObjectTimer(_Character, _TimerName, _NewTimeout);

IF
CharacterMissedBy(_Target, _Character, _)
AND
DB_LLWEAPONEX_Throwing_Temp_ForkIterator(_ShootSkill, _Character, _InitialTarget, _IteratorEvent, _TotalTargets)
AND
DB_LLWEAPONEX_Throwing_Temp_SkillNotReturned(_Character, _ShootSkill, _ReturnSkill)
THEN
LLWEAPONEX_Throwing_Internal_OnTargetHit(_Character, (GUIDSTRING)_Target, _ShootSkill);

IF
CharacterStatusApplied(_Target, _HitStatus, (CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill(_ShootSkill, _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
AND
DB_LLWEAPONEX_Throwing_Temp_SkillNotReturned(_Character, _ShootSkill, _ReturnSkill)
AND
_Character != NULL_00000000-0000-0000-0000-000000000000
THEN
LLWEAPONEX_Throwing_Internal_OnTargetHit(_Character, (GUIDSTRING)_Target, _ShootSkill);

IF
ItemStatusChange(_Target, _HitStatus, (CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill(_ShootSkill, _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
AND
DB_LLWEAPONEX_Throwing_Temp_SkillNotReturned(_Character, _ShootSkill, _ReturnSkill)
AND
_Character != NULL_00000000-0000-0000-0000-000000000000
THEN
LLWEAPONEX_Throwing_Internal_OnTargetHit(_Character, (GUIDSTRING)_Target, _ShootSkill);

PROC
LLWEAPONEX_Throwing_Internal_OnTargetHit((CHARACTERGUID)_Character, (GUIDSTRING)_Target, (STRING)_ShootSkill)
AND
NOT DB_LLWEAPONEX_Throwing_Temp_ReturnTarget(_Character, _, _, _)
THEN
LLWEAPONEX_Throwing_Internal_SetReturnTarget(_Character, _Target, _ShootSkill, 0);

PROC
LLWEAPONEX_Throwing_Internal_OnTargetHit((CHARACTERGUID)_Character, (GUIDSTRING)_Target, (STRING)_ShootSkill)
AND
DB_LLWEAPONEX_Throwing_Temp_ReturnTarget(_Character, _OtherTarget, _ShootSkill, _Count)
AND
IntegerSum(_Count, 1, _NextCount)
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_ReturnTarget(_Character, _OtherTarget, _ShootSkill, _Count);
LLWEAPONEX_Throwing_Internal_SetReturnTarget(_Character, _Target, _ShootSkill, _NextCount);

/*
PROC
LLWEAPONEX_Throwing_Internal_OnTargetHit((CHARACTERGUID)_Character, (GUIDSTRING)_Target, (STRING)_ShootSkill)
AND
NOT DB_LLWEAPONEX_Throwing_Temp_ForkIterator(_ShootSkill, _Character, _, _, _)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill(_ShootSkill, _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
THEN
ProcObjectTimerCancel(_Character, _TimerName);
ProcObjectTimer(_Character, _TimerName, _Timeout);
*/

PROC
LLWEAPONEX_Throwing_Internal_SetReturnTarget((CHARACTERGUID)_Character, (GUIDSTRING)_Target, (STRING)_ShootSkill, (INTEGER)_Count)
THEN
DB_LLWEAPONEX_Throwing_Temp_ReturnTarget(_Character, _Target, _ShootSkill, _Count);

QRY
LLWEAPONEX_Throwing_QRY_MaxTargetsHit((CHARACTERGUID)_Character, (STRING)_ShootSkill, (INTEGER)_Count)
AND
NOT DB_LLWEAPONEX_Throwing_Temp_CountResolved(_Character, _ShootSkill)
AND
DB_LLWEAPONEX_Throwing_Temp_ForkIterator(_ShootSkill, _Character, _InitialTarget, _IteratorEvent, _TotalTargets)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill(_ShootSkill, _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
AND
_TotalTargets < _MaxTargets
AND
_Count >= _TotalTargets
THEN
DB_LLWEAPONEX_Throwing_Temp_CountResolved(_Character, _ShootSkill);

QRY
LLWEAPONEX_Throwing_QRY_MaxTargetsHit((CHARACTERGUID)_Character, (STRING)_ShootSkill, (INTEGER)_Count)
AND
NOT DB_LLWEAPONEX_Throwing_Temp_CountResolved(_Character, _ShootSkill)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill(_ShootSkill, _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
AND
_Count >= _MaxTargets
THEN
DB_LLWEAPONEX_Throwing_Temp_CountResolved(_Character, _ShootSkill);

QRY
LLWEAPONEX_Throwing_QRY_MaxTargetsHit((CHARACTERGUID)_Character, (STRING)_ShootSkill, (INTEGER)_Count)
AND
DB_LLWEAPONEX_Throwing_Temp_CountResolved(_Character, _ShootSkill)
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_CountResolved(_Character, _ShootSkill);

PROC
LLWEAPONEX_Throwing_Internal_SetReturnTarget((CHARACTERGUID)_Character, (GUIDSTRING)_Target, (STRING)_ShootSkill, (INTEGER)_Count)
AND
NOT LLWEAPONEX_Throwing_QRY_MaxTargetsHit(_Character, _ShootSkill, _Count)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill(_ShootSkill, _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
AND
IntegerDivide(_Timeout, 2, _FastTimeout)
AND
IntegertoString(_Count, _CountStr)
AND
IntegertoString(_MaxTargets, _TotalStr)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Throwing:Internal:SetReturnTarget(",_ShootSkill,")] [",_CountStr,"/",_TotalStr,"] hit targets.");
ProcObjectTimerCancel(_Character, _TimerName);
ProcObjectTimer(_Character, _TimerName, _FastTimeout);

PROC
LLWEAPONEX_Throwing_Internal_SetReturnTarget((CHARACTERGUID)_Character, (GUIDSTRING)_Target, (STRING)_ShootSkill, (INTEGER)_Count)
AND
LLWEAPONEX_Throwing_QRY_MaxTargetsHit(_Character, _ShootSkill, _Count)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill(_ShootSkill, _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
AND
DB_LLWEAPONEX_Throwing_Temp_ReturnTarget(_Character, _Target, _ShootSkill, _CurrentCount)
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_ReturnTarget(_Character, _Target, _ShootSkill, _CurrentCount);
ProcObjectTimerCancel(_Character, _TimerName);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Throwing:Internal:SetReturnTarget(",_ShootSkill,")] All targets hit. Shooting return skill [",_ShootSkill,"] back to caster.");
LLWEAPONEX_Throwing_Internal_ClearIterator(_Character, _ShootSkill);
LLWEAPONEX_Throwing_ShootReturnSkill(_Character, _Target, _ReturnSkill);
LLWEAPONEX_Throwing_OnFullCombo(_Character, _ShootSkill);

PROC
LLWEAPONEX_Throwing_OnFullCombo((CHARACTERGUID)_Character, "Projectile_LLWEAPONEX_ShieldToss")
THEN
//CharacterStatusText(_Character, "LLWEAPONEX_Skills_ShieldToss_AllHit");
SetStoryEvent(_Character, "LLWEAPONEX_ShieldToss_ApplyAuraBonus");
PlayEffect(_Character, "RS3_FX_GP_Status_Harmony_Impact_01");

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, _TimerName)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill(_ShootSkill, _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
AND
DB_LLWEAPONEX_Throwing_Temp_SkillNotReturned(_Character, _ShootSkill, _ReturnSkill)
THEN
LLWEAPONEX_Throwing_Internal_OnSkillTimeout(_Character, _ShootSkill, _ReturnSkill);

PROC
LLWEAPONEX_Throwing_Internal_OnSkillTimeout((CHARACTERGUID)_Character, (STRING)_ShootSkill, (STRING)_ReturnSkill)
AND
NOT DB_LLWEAPONEX_Throwing_Temp_ReturnTarget(_Character, _, _ShootSkill, _)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Throwing:OnSkillTimeout(",_ShootSkill,")] Shooting return skill [",_ShootSkill,"] back to caster. No targets hit.");
LLWEAPONEX_Throwing_ShootReturnSkill(_Character, _Character, _ReturnSkill);
LLWEAPONEX_Throwing_Internal_ClearIterator(_Character, _ShootSkill);

PROC
LLWEAPONEX_Throwing_Internal_OnSkillTimeout((CHARACTERGUID)_Character, (STRING)_ShootSkill, (STRING)_ReturnSkill)
AND
DB_LLWEAPONEX_Throwing_ReturnSkill(_ShootSkill, _ReturnSkill, _HitStatus, _MaxTargets, _TimerName, _Timeout)
AND
DB_LLWEAPONEX_Throwing_Temp_ReturnTarget(_Character, _Target, _ShootSkill, _CurrentCount)
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_ReturnTarget(_Character, _Target, _ShootSkill, _CurrentCount);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Throwing:",_TimerName,"] Shooting return skill [",_ReturnSkill,"] back to caster.");
LLWEAPONEX_Throwing_Internal_ClearIterator(_Character, _ShootSkill);
LLWEAPONEX_Throwing_ShootReturnSkill(_Character, _Target, _ReturnSkill);

PROC
LLWEAPONEX_Throwing_Internal_ClearIterator((CHARACTERGUID)_Character, (STRING)_ShootSkill)
AND
DB_LLWEAPONEX_Throwing_Temp_ForkIterator(_ShootSkill, _Character, _InitialTarget, _IteratorEvent, _TotalTargets)
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_ForkIterator(_ShootSkill, _Character, _InitialTarget, _IteratorEvent, _TotalTargets);

PROC
LLWEAPONEX_Throwing_ShootReturnSkill((CHARACTERGUID)_Character, (GUIDSTRING)_Target, (STRING)_ReturnSkill)
THEN
ProcObjectTimerCancel(_Character, "LLWEAPONEX_Timers_Throwing_ClearReturnSkillTag");
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_Throwing_ClearReturnSkillTag", 1500);

PROC
LLWEAPONEX_Throwing_ShootReturnSkill((CHARACTERGUID)_Character, (GUIDSTRING)_Target, (STRING)_ReturnSkill)
AND
DB_LLWEAPONEX_Throwing_Temp_SkillNotReturned(_Character, _ShootSkill, _ReturnSkill)
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_SkillNotReturned(_Character, _ShootSkill, _ReturnSkill);

PROC
ProcObjectTimerFinished(_Character, "LLWEAPONEX_Timers_Throwing_ClearReturnSkillTag")
AND
DB_LLWEAPONEX_Throwing_ReturnSkillTags(_ReturnSkill, _Tag)
AND
IsTagged(_Character, _Tag, 1)
THEN
ClearTag(_Character, _Tag);

PROC
LLWEAPONEX_Throwing_ShootReturnSkill((CHARACTERGUID)_Character, (GUIDSTRING)_Target, (STRING)_ReturnSkill)
AND
ObjectIsCharacter((CHARACTERGUID)_Target, 1)
THEN
SetVarString(_Character, "LLWEAPONEX_ReturnSkill", _ReturnSkill);
CharacterCharacterSetEvent(_Character, _Target, "LLWEAPONEX_Events_ShootReturnSkill");

PROC
LLWEAPONEX_Throwing_ShootReturnSkill((CHARACTERGUID)_Character, (GUIDSTRING)_Target, (STRING)_ReturnSkill)
AND
ObjectIsItem((ITEMGUID)_Target, 1)
THEN
SetVarString(_Character, "LLWEAPONEX_ReturnSkill", _ReturnSkill);
CharacterItemSetEvent(_Character, _Target, "LLWEAPONEX_Events_ShootReturnSkill");

//Debug
IF
DB_LLWEAPONEX_Throwing_Temp_ForkIterator(_ShootSkill, _Character, _InitialTarget, _IteratorEvent, _TotalTargets)
AND
IntegertoString(_TotalTargets, _TotalStr)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Throwing:ForkIterator(",_ShootSkill,")] Found [",_TotalStr,"] total fork targets.");

IF
DB_LLWEAPONEX_Throwing_Temp_ReturnTarget(_Character, _Target, _ShootSkill, _Count)
AND
DB_LLWEAPONEX_Throwing_Temp_ForkIterator(_ShootSkill, _Character, _InitialTarget, _IteratorEvent, _TotalTargets)
AND
IntegertoString(_Count, _CountStr)
AND
IntegertoString(_TotalTargets, _TotalStr)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Throwing:ReturnTarget(",_ShootSkill,")] [",_CountStr,"/",_TotalStr,"] hit targets.");

//END_REGION

//REGION MOVING_OBJECT_WEAPON
IF
StoryEvent(_Object, "LLWEAPONEX_MovingObjectWeapon_Init")
AND
ObjectExists(_Object, 1)
AND
ObjectIsItem((ITEMGUID)_Object, 1)
AND
ItemGetOwner(_Object, _Player)
AND
DB_LLWEAPONEX_Throwing_Temp_MovingObjectWeapon_Waiting((CHARACTERGUID)_Player)
AND
NOT DB_LLWEAPONEX_Throwing_Temp_MovingObjectWeapon_Active(_, _Object)
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_MovingObjectWeapon_Waiting(_Player);
DB_LLWEAPONEX_Throwing_Temp_MovingObjectWeapon_Active(_Player, (ITEMGUID)_Object);
LeaderLib_Timers_StartCharacterItemTimer(_Player, (ITEMGUID)_Object, 125, "LLWEAPONEX_Timers_MovingObject_CopyVisuals", "LLWEAPONEX_MovingObject_CopyVisuals");

IF
CharacterItemEvent(_Player, _Object, "LLWEAPONEX_MovingObject_CopyVisuals")
AND
ObjectExists(_Object, 1)
THEN
ApplyStatus(_Player, "LEADERLIB_HIDE_WEAPON", 30.0, 1, _Player);
LLWEAPONEX_Throwing_MovingObject_CopyWeaponVisuals(_Player, _Object);

PROC
LLWEAPONEX_Throwing_MovingObject_CopyWeaponVisuals((CHARACTERGUID)_Player, (ITEMGUID)_Object)
AND
CharacterGetEquippedItem(_Player, "Weapon", (ITEMGUID)_Weapon)
AND
_Weapon != NULL_00000000-0000-0000-0000-000000000000
AND
ObjectExists(_Weapon, 1)
AND
GetTemplate(_Weapon, _Template)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_06_Throwing:MovingObject_CopyWeaponVisuals] Transforming object into [",_Template,"].");
Transform(_Object, _Template, 0, 1, 0);
ItemSetCanPickUp(_Object, 0);
ItemSetOwner(_Object, _Player);
LLWEAPONEX_Throwing_MovingObject_HideWeaponEffects(_Weapon);

/*
PROC
LLWEAPONEX_Throwing_MovingObject_CopyWeaponVisuals((CHARACTERGUID)_Player, (ITEMGUID)_Object)
AND
CharacterGetEquippedItem(_Player, "Shield", (ITEMGUID)_Weapon)
AND
_Weapon != NULL_00000000-0000-0000-0000-000000000000
AND
ObjectExists(_Weapon, 1)
AND
NOT CharacterGetEquippedItem(_Player, "Weapon", _Weapon) // Two-handed weapons
AND
NOT CharacterGetEquippedShield(_Player, _Weapon) // Don't throw equipped shields
AND
GetPosition(_Object, _x, _y, _z)
AND
GetTemplate(_Weapon, _Template)
AND
CreateItemTemplateAtPosition(_Template, _x, _y, _z, _OffhandWeapon)
THEN
ItemSetCanPickUp(_OffhandWeapon, 0);
DB_LLWEAPONEX_Throwing_Temp_ThrownOffhandProjectile(_Player, _Object, _OffhandWeapon);
LLWEAPONEX_Throwing_MovingObject_HideWeaponEffects(_Weapon);
*/

PROC
LLWEAPONEX_Throwing_MovingObject_HideWeaponEffects((ITEMGUID)_Weapon)
AND
IsTagged(_Weapon, "DISABLE_WEAPON_EFFECTS", 0)
THEN
SetTag(_Weapon, "DISABLE_WEAPON_EFFECTS");
ObjectSetFlag(_Weapon, "LLWEAPONEX_MovingObject_ResetDisableWeaponFXTag", 0);

/*
IF
StoryEvent((ITEMGUID)_Object, "LLWEAPONEX_MovingObjectWeapon_Tick")
AND
DB_LLWEAPONEX_Throwing_Temp_ThrownOffhandProjectile(_Player, _Object, _OffhandWeapon)
AND
GetPosition(_Object, _x, _y, _z)
AND
RealSum(_y, 0.25, _ty)
AND
GetRotation(_Object, _rx, _ry, _rz)
THEN
ItemToTransform(_OffhandWeapon, _x, _ty, _z, _rx, _ry, _rz, 1, _Player);
LeaderLog_Log("DEBUG", "[LLWEAPONEX_06_Throwing:LLWEAPONEX_MovingObjectWeapon_Tick] Updating offhand projectile position.");
*/

IF
CharacterItemEvent(_Player, _Object, "LLWEAPONEX_MovingObjectWeapon_Landed")
AND
DB_LLWEAPONEX_Throwing_Temp_MovingObjectWeapon_Active(_Player, _Object)
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_MovingObjectWeapon_Active(_Player, _Object);
LeaderLog_Log("DEBUG", "[LLWEAPONEX_06_Throwing:LLWEAPONEX_MovingObjectWeapon_Landed] Weapon MovingObject landed. Teleporting equipped weapon to position.");
LLWEAPONEX_Throwing_MovingObject_TeleportWeapon(_Player, _Object);
RemoveStatus(_Player, "LEADERLIB_HIDE_WEAPON");
SetOnStage(_Object, 0);
ItemDestroy(_Object);

/*
IF
CharacterItemEvent(_Player, _Object, "LLWEAPONEX_MovingObjectWeapon_Landed")
AND
DB_LLWEAPONEX_Throwing_Temp_ThrownOffhandProjectile(_Player, _Object, _OffhandWeapon)
THEN
NOT DB_LLWEAPONEX_Throwing_Temp_ThrownOffhandProjectile(_Player, _Object, _OffhandWeapon);
LLWEAPONEX_Throwing_MovingObject_TeleportOffhandWeapon(_Player, _OffhandWeapon);
SetOnStage(_OffhandWeapon, 0);
ItemDestroy(_OffhandWeapon);
*/

PROC
LLWEAPONEX_Throwing_MovingObject_TeleportWeapon((CHARACTERGUID)_Player, (ITEMGUID)_Object)
AND
CharacterGetEquippedWeapon(_Player, (ITEMGUID)_Weapon)
AND
_Weapon != NULL_00000000-0000-0000-0000-000000000000
THEN
CharacterUnequipItem(_Player, _Weapon);
LeaderLib_Helper_CopyItemTransform(_Weapon, _Object);
LLWEAPONEX_Throwing_MovingObject_ResetWeaponEffects(_Weapon);

PROC
LLWEAPONEX_Throwing_MovingObject_TeleportOffhandWeapon((CHARACTERGUID)_Player, (ITEMGUID)_Object)
AND
CharacterGetEquippedItem(_Player, "Shield", (ITEMGUID)_Weapon)
AND
_Weapon != NULL_00000000-0000-0000-0000-000000000000
THEN
CharacterUnequipItem(_Player, _Weapon);
LeaderLib_Helper_CopyItemTransform(_Weapon, _Object);
LLWEAPONEX_Throwing_MovingObject_ResetWeaponEffects(_Weapon);

PROC
LLWEAPONEX_Throwing_MovingObject_ResetWeaponEffects((ITEMGUID)_Weapon)
AND
IsTagged(_Weapon, "DISABLE_WEAPON_EFFECTS", 1)
AND
ObjectGetFlag(_Weapon, "LLWEAPONEX_MovingObject_ResetDisableWeaponFXTag", 1)
THEN
ObjectClearFlag(_Weapon, "LLWEAPONEX_MovingObject_ResetDisableWeaponFXTag", 0);
ClearTag(_Weapon, "DISABLE_WEAPON_EFFECTS");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_00_PostCC"
