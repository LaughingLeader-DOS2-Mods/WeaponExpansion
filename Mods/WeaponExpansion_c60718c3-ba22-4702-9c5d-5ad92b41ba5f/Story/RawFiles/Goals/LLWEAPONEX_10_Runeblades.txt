Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLWEAPONEX_Runeblades_InitSettings();
KBSECTION

//REGION SETTINGS
PROC
LLWEAPONEX_Runeblades_InitSettings()
THEN
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_AVALANCHE");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_AIR");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_EARTH");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_FIRE");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_POISON");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_WATER");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_CONDUCTION");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_CONTAMINATION");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_DUST");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_EXPLOSIVE");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_GAS");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_HEATWAVE");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_LAVA");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_SEARING");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_TAR");

DB_LLWEAPONEX_Runeblades_TagToSkill("LLWEAPONEX_Runeblade_Air", "Shout_LLWEAPONEX_ActivateRuneblade_Air", "Shout_LLWEAPONEX_ActivateRuneblade_Air_DualWield", "LLWEAPONEX_RUNEBLADE_ADDSKILL_AIR");
DB_LLWEAPONEX_Runeblades_TagToSkill("LLWEAPONEX_Runeblade_Chaos", "Shout_LLWEAPONEX_ActivateRuneblade_Chaos", "Shout_LLWEAPONEX_ActivateRuneblade_Chaos_DualWield", "LLWEAPONEX_RUNEBLADE_ADDSKILL_CHAOS");
DB_LLWEAPONEX_Runeblades_TagToSkill("LLWEAPONEX_Runeblade_Earth", "Shout_LLWEAPONEX_ActivateRuneblade_Earth", "Shout_LLWEAPONEX_ActivateRuneblade_Earth_DualWield", "LLWEAPONEX_RUNEBLADE_ADDSKILL_EARTH");
DB_LLWEAPONEX_Runeblades_TagToSkill("LLWEAPONEX_Runeblade_Fire", "Shout_LLWEAPONEX_ActivateRuneblade_Fire", "Shout_LLWEAPONEX_ActivateRuneblade_Fire_DualWield", "LLWEAPONEX_RUNEBLADE_ADDSKILL_FIRE");
DB_LLWEAPONEX_Runeblades_TagToSkill("LLWEAPONEX_Runeblade_Poison", "Shout_LLWEAPONEX_ActivateRuneblade_Poison", "Shout_LLWEAPONEX_ActivateRuneblade_Poison_DualWield", "LLWEAPONEX_RUNEBLADE_ADDSKILL_POISON");
DB_LLWEAPONEX_Runeblades_TagToSkill("LLWEAPONEX_Runeblade_Water", "Shout_LLWEAPONEX_ActivateRuneblade_Water", "Shout_LLWEAPONEX_ActivateRuneblade_Water_DualWield", "LLWEAPONEX_RUNEBLADE_ADDSKILL_WATER");

DB_LLWEAPONEX_Runeblades_StatusSound("LLWEAPONEX_RUNEBLADE_HEATBURST_SPREAD", "Skill_Fire_Cast_AoE_Air_Fire", 800);
DB_LLWEAPONEX_Runeblades_FlagSound("LLWEAPONEX_Runeblade_PlayHeatBurstCheckSound", "Skill_Fire_Cast_Target_Totem_Fire", 800);

PROC
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses((STRING)_BaseStatus)
THEN
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses((STRING)_BaseStatus, 2);

PROC
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses((STRING)_BaseStatus, (INTEGER)_RegisterSecond)
AND
StringConcatenate(_BaseStatus, "_DAMAGE1", _BonusDamageStatus)
THEN
DB_LLWEAPONEX_Runeblades_BonusDamageStatuses(_BaseStatus, _BonusDamageStatus, "");
//END_REGION

//REGION UPDATES
/*
PROC
LeaderLib_Mods_OnVersionChanged(c60718c3-ba22-4702-9c5d-5ad92b41ba5f, (INTEGER)_LastVersion, (INTEGER)_NextVersion)
THEN
LLWEAPONEX_Runeblades_InitSettings();
*/
//END_REGION

//REGION RUNE_STATUSES_INIT
PROC
LLWEAPONEX_Runeblades_InitSettings()
AND
NOT DB_LLWEAPONEX_Statuses_Runes(_)
THEN
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_AIR");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_AVALANCHE");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_AVALANCHE");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_AIR");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_AIR");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_EARTH");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_EARTH");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_FIRE");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_FIRE");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_PLUS");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_POISON");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_POISON");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_WATER");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_WATER");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_CONDUCTION");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_CONDUCTION");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_CONTAMINATION");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_CONTAMINATION");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_DUST");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_DUST");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_EARTH");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_EXPLOSIVE");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_EXPLOSIVE");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_FIRE");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_GAS");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_GAS");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_HEATBURST");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_HEATBURST");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_ICE");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_INFERNO");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_LAVA");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_LAVA");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_POISON");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_QUAKE");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_SEARING");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_SEARING");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_TAR");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_TAR");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_THUNDERBOLT");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_VENOM");
DB_LLWEAPONEX_Statuses_Runes("LLWEAPONEX_ACTIVATE_RUNEBLADE_WATER");
//END_REGION

//REGION CHAOS_RUNE_SURFACE_ABSORB
QRY
LLWEAPONEX_Runeblades_QRY_IgnoreSurfaceRemoval((CHARACTERGUID)_Char, (STRING)_Surface)
AND
StringContains(_Surface, "Blessed", 1)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Runeblades_QRY_IgnoreSurfaceRemoval((STRING)_Surface)
AND
StringContains(_Surface, "Cursed", 1)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Runeblades_QRY_IgnoreSurfaceRemoval((STRING)_Surface)
AND
StringContains(_Surface, "Purified", 1)
THEN
DB_NOOP(1);

/* Handled in LLWEAPONEX_RuneBlades.gameScript
IF
CharacterStatusAttempt(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_CHAOS", _)
AND
DB_LeaderLib_Surfaces(_Index, _Surface)
AND
ObjectGetFlag(_Char, "LLWEAPONEX_ChaosRune_PreserveSurface", 0)
AND
LeaderLib_Helper_QRY_IsInSurface((GUIDSTRING)_Char, _Surface)
AND
LLWEAPONEX_Runeblades_QRY_IgnoreSurfaceRemoval(_Surface)
THEN
ObjectSetFlag(_Char, "LLWEAPONEX_ChaosRune_PreserveSurface", 0);

IF
CharacterStatusRemoved(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_CHAOS", _)
AND
DB_LLWEAPONEX_Runeblades_AbsorbedSurface(_Char)
AND
GetPosition(_Char, _x, _y, _z)
THEN
NOT DB_LLWEAPONEX_Runeblades_AbsorbedSurface(_Char);
//RemoveStatus(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_CHAOS");
PlayEffect(_Char, "RS3_FX_Skills_Void_Cast_Weapon_Hand_01", "Dummy_CastFX");
CreateSurfaceAtPosition(_x, _y, _z, "SurfaceNone", 1.0, -1.0); // Absorb the surface
*/

IF
CharacterStatusRemoved(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_CHAOS", _)
AND
ObjectGetFlag(_Char, "LLWEAPONEX_ChaosRune_PreserveSurface", 1)
THEN
ObjectClearFlag(_Char, "LLWEAPONEX_ChaosRune_PreserveSurface");
//CharacterStatusText(_Char, "LLWEAPONEX_NoElementFoundForChaosRune");
//END_REGION

//REGION BONUS_DAMAGE_STATUS
PROC
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses((STRING)_BaseStatus, 2)
AND
DB_LLWEAPONEX_Runeblades_BonusDamageStatuses(_BaseStatus, _BonusDamageStatus1, _EmptyStatus)
AND
StringConcatenate(_BaseStatus, "_DAMAGE2", _BonusDamageStatus2)
THEN
NOT DB_LLWEAPONEX_Runeblades_BonusDamageStatuses(_BaseStatus, _BonusDamageStatus1, _EmptyStatus);
DB_LLWEAPONEX_Runeblades_BonusDamageStatuses(_BaseStatus, _BonusDamageStatus1, _BonusDamageStatus2);

PROC
LLWEAPONEX_Runeblades_OnActivateStatusApplied((CHARACTERGUID)_Char, (STRING)_Status)
AND
DB_LLWEAPONEX_Runeblades_BonusDamageStatuses(_Status, _BonusDamage1, _BonusDamage2)
AND
GetStatusTurns(_Char, _Status, _TurnsInt)
AND
_TurnsInt > 0
AND
Real(_TurnsInt, _TurnsReal)
AND
RealProduct(_TurnsReal, 6.0, _Duration)
THEN
LLWEAPONEX_Runeblades_ApplyBonusDamageStatus(_Char, _BonusDamage1, _Duration);
LLWEAPONEX_Runeblades_ApplyBonusDamageStatus(_Char, _BonusDamage2, _Duration);

PROC
LLWEAPONEX_Runeblades_ApplyBonusDamageStatus((CHARACTERGUID)_Char, (STRING)_Status, (REAL)_Duration)
AND
_Status != ""
THEN
ApplyStatus(_Char, _Status, _Duration, 0, _Char);

IF
CharacterStatusRemoved(_Char, _Status, _)
AND
DB_LLWEAPONEX_Runeblades_BonusDamageStatuses(_Status, _BonusDamage1, _BonusDamage2)
THEN
LLWEAPONEX_Runeblades_RemoveBonusDamageStatus(_Char, _BonusDamage1);
LLWEAPONEX_Runeblades_RemoveBonusDamageStatus(_Char, _BonusDamage2);

PROC
LLWEAPONEX_Runeblades_RemoveBonusDamageStatus((CHARACTERGUID)_Char, (STRING)_Status)
AND
_Status != ""
THEN
RemoveStatus(_Char, _Status);
//END_REGION

//REGION RANDOM_ROLL
IF
CharacterCharacterEvent(_Source, _Target, "LLWEAPONEX_Commands_Runeblade_StartRandom")
AND
LeaderLib_Random_QRY(999)
AND
DB_LeaderLib_Random(_Ran)
THEN
NOT DB_LeaderLib_Random(_Ran);
SetVarInteger(_Source, "LLWEAPONEX_Runeblade_Roll", _Ran);
CharacterCharacterSetEvent(_Source, _Target, "LLWEAPONEX_Events_Runeblade_RandomSet");
//END_REGION

//REGION DOUBLE_HITS
IF
CharacterStatusApplied(_Char, "LLWEAPONEX_PREVENT_DOUBLE_HITS", _)
THEN
ProcObjectTimer(_Char, "LLWEAPONEX_Timers_PreventDoubleHits", 500);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "LLWEAPONEX_Timers_PreventDoubleHits")
THEN
RemoveStatus(_Char, "LLWEAPONEX_PREVENT_DOUBLE_HITS");
//END_REGION

//REGION SOUL_BURN_TICK
//LLWEAPONEX_SOUL_BURN_PROC - Increase the stack
//LLWEAPONEX_SOUL_BURN_TICK - Lower the stack

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Commands_StartSoulBurnTick")
AND
HasActiveStatus(_Char, "LLWEAPONEX_SOUL_BURN1", 0) // Skip since it's at the bottom of the stack
THEN
ObjectClearFlag(_Char, "LLWEAPONEX_SkipSoulBurnTick");
ApplyStatus(_Char, "LLWEAPONEX_SOUL_BURN_TICK", 6.0, 1, _Char);

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Commands_StopSoulBurnTick")
THEN
ObjectSetFlag(_Char, "LLWEAPONEX_SkipSoulBurnTick", 0);
RemoveStatus(_Char, "LLWEAPONEX_SOUL_BURN_TICK");

IF
CharacterStatusRemoved(_Char, "LLWEAPONEX_SOUL_BURN_TICK", _)
AND
ObjectGetFlag(_Char, "LLWEAPONEX_SkipSoulBurnTick", 1)
THEN
ProcObjectTimer(_Char, "LLWEAPONEX_Timers_ResetSkipSoulBurnTickTimerFlag", 250);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "LLWEAPONEX_Timers_ResetSkipSoulBurnTickTimerFlag")
THEN
ObjectClearFlag(_Char, "LLWEAPONEX_SkipSoulBurnTick");
//END_REGION

//REGION THUNDERBOLT
IF
CharacterStatusApplied(_Char, "LLWEAPONEX_RUNEBLADE_THUNDERBOLT_EXPLODE", NULL_00000000-0000-0000-0000-000000000000)
AND
CharacterGetHostCharacter(_Host)
AND
CharacterGetLevel(_Host, _Level)
AND
GetPosition(_Char, _x, _y, _z)
THEN
CreateProjectileStrikeAtPosition(_x, _y, _z, "ProjectileStrike_LLWEAPONEX_Runeblade_Dummy_Thunderbolt", _Level);

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_RUNEBLADE_THUNDERBOLT_EXPLODE", (CHARACTERGUID)_Cause)
AND
CharacterIsDead(_Char, 0)
AND
_Cause != NULL_00000000-0000-0000-0000-000000000000
THEN
LeaderLib_Skills_UseSkillOnTarget(_Cause, _Char, "ProjectileStrike_LLWEAPONEX_Runeblade_Dummy_Thunderbolt", 1, 1);

PROC
LeaderLib_Skills_OnDummyUsedSkillOnTarget((CHARACTERGUID)_Dummy, (CHARACTERGUID)_Caster, "ProjectileStrike_LLWEAPONEX_Runeblade_Dummy_Thunderbolt", (GUIDSTRING)_Target, (STRING)_Skilltype, (STRING)_SkillElement)
THEN
DB_LLWEAPONEX_Runeblades_Temp_ThunderboltDummy(_Caster, _Dummy, _Target);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_RUNEBLADE_THUNDERBOLT_PROJECTILESTRIKE_DUMMYHIT", (CHARACTERGUID)_Dummy)
AND
DB_LLWEAPONEX_Runeblades_Temp_ThunderboltDummy(_Caster, _Dummy, _Target)
THEN
ApplyStatus(_Target, "LLWEAPONEX_RUNEBLADE_THUNDERBOLT_PROJECTILESTRIKE_DAMAGE", 0.0, 0, _Caster);
ApplyStatus(_Target, "LLWEAPONEX_RUNEBLADE_THUNDERBOLT_PROJECTILESTRIKE_CHAINLIGHTNING", 0.0, 0, _Caster);

PROC
LeaderLib_Skills_OnDummyCastSkillOnTarget((CHARACTERGUID)_Dummy, (CHARACTERGUID)_Caster, "ProjectileStrike_LLWEAPONEX_Runeblade_Dummy_Thunderbolt", (GUIDSTRING)_Target, (STRING)_Skilltype, (STRING)_SkillElement)
THEN
LeaderLib_Timers_StartObjectTimer(_Caster, 1000, "LLWEAPONEX_Timers_Runeblade_Thunderbolt_ClearDummyDB", "LLWEAPONEX_Runeblade_Thunderbolt_ClearDummyDB");

IF
StoryEvent((CHARACTERGUID)_Caster, "LLWEAPONEX_Runeblade_Thunderbolt_ClearDummyDB")
AND
DB_LLWEAPONEX_Runeblades_Temp_ThunderboltDummy(_Caster, _Dummy, _Target)
THEN
NOT DB_LLWEAPONEX_Runeblades_Temp_ThunderboltDummy(_Caster, _Dummy, _Target);
//END_REGION

//REGION DOUBLE_RUNEBLADE_SKILLS
QRY
LLWEAPONEX_Runeblades_QRY_CanAddDualWieldSkill((ITEMGUID)_MainhandRuneblade, (ITEMGUID)_OffhandRuneblade, (STRING)_Tag)
AND
IsTagged(_MainhandRuneblade, _Tag, 1)
AND
IsTagged(_OffhandRuneblade, _Tag, 1)
THEN
DB_NOOP(1);


PROC
LLWEAPONEX_WeaponMastery_OnMasteryDeactivated((CHARACTERGUID)_Char, "LLWEAPONEX_Runeblade")
THEN
ObjectClearFlag(_Char, "LLWEAPONEX_Runeblade_RuneActive", 0);

IF
ItemUnEquipped(_Runeblade, _Char)
AND
DB_LLWEAPONEX_Runeblades_Temp_AddedDualWieldingRuneSkill(_Char, _Runeblade, _Skill)
THEN
NOT DB_LLWEAPONEX_Runeblades_Temp_AddedDualWieldingRuneSkill(_Char, _Runeblade, _Skill);
CharacterRemoveSkill(_Char, _Skill);

/*
IF
ItemUnEquipped(_Runeblade, _Char)
AND
IsTagged(_Runeblade, "LLWEAPONEX_Runeblade", 1)
AND
DB_LLWEAPONEX_Runeblades_Temp_AddedDualWieldingStatus(_Char, _StoredRuneblade, _Status)
THEN
NOT DB_LLWEAPONEX_Runeblades_Temp_AddedDualWieldingStatus(_Char, _StoredRuneblade, _Status);
RemoveStatus(_Char, _Status);
*/

PROC
LLWEAPONEX_Equipment_OnTaggedItemEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item,  "LLWEAPONEX_Runeblade", (INTEGER)_IsPlayer)
THEN
LLWEAPONEX_Runeblades_OnRunebladeEquipped(_Char, _Item);

//Mainhand
PROC
LLWEAPONEX_Runeblades_OnRunebladeEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Runeblade)
AND
IsTagged(_Runeblade, "LLWEAPONEX_Runeblade_CustomRuneSkill", 0)
AND
CharacterGetEquippedItem(_Char, "Weapon", (ITEMGUID)_Runeblade)
AND
CharacterGetEquippedItem(_Char, "Shield", (ITEMGUID)_OtherRuneblade)
AND
IsTagged(_OtherRuneblade, "LLWEAPONEX_Runeblade", 1)
AND
IsTagged(_OtherRuneblade, "LLWEAPONEX_Runeblade_CustomRuneSkill", 0)
AND
DB_LLWEAPONEX_Runeblades_TagToSkill(_Tag, _MainSkill, _DualWieldSkill, _Status)
AND
CharacterHasSkill(_Char, _MainSkill, 1)
AND
CharacterHasSkill(_Char, _DualWieldSkill, 0)
AND
LLWEAPONEX_Runeblades_QRY_CanAddDualWieldSkill(_Runeblade, _OtherRuneblade, _Tag)
THEN
//ApplyStatus(_Char, _Status, -1.0, 1, _Char);
//DB_LLWEAPONEX_Runeblades_Temp_AddedDualWieldingStatus(_Char, _Runeblade, _Status);
CharacterAddSkill(_Char, _DualWieldSkill, 0);
DB_LLWEAPONEX_Runeblades_Temp_AddedDualWieldingRuneSkill(_Char, _Runeblade, _DualWieldSkill);

//Offhand
PROC
LLWEAPONEX_Runeblades_OnRunebladeEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Runeblade)
AND
IsTagged(_Runeblade, "LLWEAPONEX_Runeblade_CustomRuneSkill", 0)
AND
CharacterGetEquippedItem(_Char, "Shield", (ITEMGUID)_Runeblade)
AND
CharacterGetEquippedItem(_Char, "Weapon", (ITEMGUID)_OtherRuneblade)
AND
IsTagged(_OtherRuneblade, "LLWEAPONEX_Runeblade", 1)
AND
IsTagged(_OtherRuneblade, "LLWEAPONEX_Runeblade_CustomRuneSkill", 0)
AND
DB_LLWEAPONEX_Runeblades_TagToSkill(_Tag, _MainSkill, _DualWieldSkill, _Status)
AND
CharacterHasSkill(_Char, _MainSkill, 1)
AND
CharacterHasSkill(_Char, _DualWieldSkill, 0)
AND
LLWEAPONEX_Runeblades_QRY_CanAddDualWieldSkill(_Runeblade, _OtherRuneblade, _Tag)
THEN
CharacterAddSkill(_Char, _DualWieldSkill, 0);
DB_LLWEAPONEX_Runeblades_Temp_AddedDualWieldingRuneSkill(_Char, _Runeblade, _DualWieldSkill);
//END_REGION

//REGION SOUNDS
IF
CharacterStatusApplied(_Char, "LLWEAPONEX_RUNEBLADE_HEATBURST_SPREAD", _)
AND
DB_LLWEAPONEX_Runeblades_StatusSound("LLWEAPONEX_RUNEBLADE_HEATBURST_SPREAD", _Sound, _Delay)
AND
NOT DB_LLWEAPONEX_Runeblades_Temp_PreventSound(_, "LLWEAPONEX_RUNEBLADE_HEATBURST_SPREAD", _)
AND
StringConcatenate("LLWEAPONEX_Timers_ResetStatusSound_", "LLWEAPONEX_RUNEBLADE_HEATBURST_SPREAD", _TimerName)
THEN
PlaySound(_Char, _Sound);
TimerLaunch(_TimerName, _Delay);
DB_LLWEAPONEX_Runeblades_Temp_PreventSound((GUIDSTRING)_Char, "LLWEAPONEX_RUNEBLADE_HEATBURST_SPREAD", _TimerName);

IF
ObjectFlagSet("LLWEAPONEX_Runeblade_PlayHeatBurstCheckSound", _Object, _)
AND
DB_LLWEAPONEX_Runeblades_FlagSound("LLWEAPONEX_Runeblade_PlayHeatBurstCheckSound", _Sound, _Delay)
AND
NOT DB_LLWEAPONEX_Runeblades_Temp_PreventSound(_, "LLWEAPONEX_Runeblade_PlayHeatBurstCheckSound", _)
AND
StringConcatenate("LLWEAPONEX_Timers_ResetStatusSound_", "LLWEAPONEX_Runeblade_PlayHeatBurstCheckSound", _TimerName)
THEN
ObjectClearFlag(_Object, "LLWEAPONEX_Runeblade_PlayHeatBurstCheckSound", 0);
PlaySound(_Object, _Sound);
TimerLaunch(_TimerName, _Delay);
DB_LLWEAPONEX_Runeblades_Temp_PreventSound((GUIDSTRING)_Object, "LLWEAPONEX_Runeblade_PlayHeatBurstCheckSound", _TimerName);

IF
TimerFinished(_TimerName)
AND
DB_LLWEAPONEX_Runeblades_Temp_PreventSound(_Object, _String, _TimerName)
THEN
NOT DB_LLWEAPONEX_Runeblades_Temp_PreventSound(_Object, _String, _TimerName);

/*
IF
CharacterStatusApplied(_Char, _Status, _)
AND
DB_LLWEAPONEX_Runeblades_StatusSound(_Status, _Sound, _Delay)
AND
NOT DB_LLWEAPONEX_Runeblades_Temp_PreventSound(_Status, _)
AND
StringConcatenate("LLWEAPONEX_Timers_ResetStatusSound_", _Status, _TimerName)
THEN
DB_LLWEAPONEX_Runeblades_Temp_PreventSound(_Status, _TimerName);
PlaySound(_Char, _Sound);
TimerLaunch(_TimerName, _Delay);
*/

/*
IF
ObjectFlagSet(_Flag, _Object, _)
AND
DB_LLWEAPONEX_Runeblades_FlagSound(_Flag, _Sound, _Delay)
AND
NOT DB_LLWEAPONEX_Runeblades_Temp_PreventSound(_Flag, _)
AND
StringConcatenate("LLWEAPONEX_Timers_ResetStatusSound_", _Flag, _TimerName)
THEN
DB_LLWEAPONEX_Runeblades_Temp_PreventSound(_Flag, _TimerName);
PlaySound(_Object, _Sound);
TimerLaunch(_TimerName, _Delay);

IF
ObjectFlagSet(_Flag, _Object, _)
AND
DB_LLWEAPONEX_Runeblades_FlagSound(_Flag, _Sound, _Delay)
THEN
ObjectClearFlag(_Object, _Flag);
*/
//END_REGION

//REGION ON_HIT
QRY
LLWEAPONEX_Runeblades_QRY_HasRuneStatus((CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Statuses_Runes(_Status)
AND
HasActiveStatus(_Character, _Status, 1)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Runeblades_QRY_CanApplyOnHit((CHARACTERGUID)_Source, (CHARACTERGUID)_Target)
AND
CharacterIsDead(_Source, 0)
AND
CharacterIsDead(_Target, 0)
AND
LLWEAPONEX_Runeblades_QRY_HasRuneStatus(_Source)
THEN
DB_NOOP(1);

IF
CharacterStatusAttempt(_Char, "LLWEAPONEX_RUNEBLADE_APPLY_STATUS", _Source)
AND
ObjectIsCharacter((CHARACTERGUID)_Source, 1)
AND
LLWEAPONEX_Runeblades_QRY_CanApplyOnHit(_Source, _Char)
THEN
CharacterCharacterSetEvent(_Source, _Char, "LLWEAPONEX_Runeblade_ApplyBonusOnHit");

IF
CharacterStatusAttempt(_Char, "LLWEAPONEX_ARMCANNON_HIT", _Source)
AND
ObjectIsCharacter((CHARACTERGUID)_Source, 1)
AND
LLWEAPONEX_Runeblades_QRY_CanApplyOnHit(_Source, _Char)
THEN
CharacterCharacterSetEvent(_Source, _Char, "LLWEAPONEX_Runeblade_ApplyBonusOnHit");
//END_REGION

//REGION ACTIVATE_STATUS_APPLIED
IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_AVALANCHE", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_AVALANCHE");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_AIR", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_AIR");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_EARTH", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_EARTH");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_FIRE", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_FIRE");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_POISON", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_POISON");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_WATER", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_WATER");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_CONDUCTION", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_CONDUCTION");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_CONTAMINATION", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_CONTAMINATION");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_DUST", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_DUST");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_EXPLOSIVE", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_EXPLOSIVE");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_GAS", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_GAS");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_HEATWAVE", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_HEATWAVE");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_LAVA", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_LAVA");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_SEARING", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_SEARING");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_TAR", _)
THEN
LLWEAPONEX_Runeblades_OnActivateStatusApplied(_Char, "LLWEAPONEX_ACTIVATE_RUNEBLADE_TAR");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_00_PostCC"
