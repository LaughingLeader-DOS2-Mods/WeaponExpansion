Version 1
SubGoalCombiner SGC_AND
INITSECTION
LeaderLib_Skills_Register_StatusToggleSkill("Shout_LLWEAPONEX_Rapier_DuelistStance", "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST");
LeaderLib_Statuses_Register_PermanentStatus("WeaponExpansion", "MasteryPassives", "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", "LLWEAPONEX_DuelistStanceWasEnabled");
DB_LLWEAPONEX_Rapiers_FrenzyCharge("LLWEAPONEX_RAPIER_FRENZYCHARGE1");
DB_LLWEAPONEX_Rapiers_FrenzyCharge("LLWEAPONEX_RAPIER_FRENZYCHARGE2");
DB_LLWEAPONEX_Rapiers_FrenzyCharge("LLWEAPONEX_RAPIER_FRENZYCHARGE3");
DB_LLWEAPONEX_Rapiers_FrenzyCharge("LLWEAPONEX_RAPIER_FRENZYCHARGE4");
KBSECTION

//REGION DUELIST_EMPTY_HAND
PROC
LLWEAPONEX_WeaponMastery_UnlockSkill((CHARACTERGUID)_Player, "LLWEAPONEX_Rapier", "DuelistStance")
AND
GetUUID(_Player, _UUID)
AND
NRD_ModQuery2("WeaponExpansion", "HasEmptyHand", _UUID, "true")
THEN
LLWEAPONEX_WeaponMastery_Rapiers_OnEmptyHandGained(_Player);

PROC
LLWEAPONEX_WeaponMastery_Rapiers_OnEmptyHandGained((CHARACTERGUID)_Player)
AND
ObjectGetFlag(_Player, "LLWEAPONEX_DuelistStanceWasEnabled", 1) // Set/cleared by LeaderLib when the toggle skill is used
AND
NOT LeaderLib_Helper_QRY_HasPermanentStatus(_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST")
THEN
ApplyStatus(_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", -1.0, 0, _Player);

PROC
LLWEAPONEX_WeaponMastery_Rapiers_OnEmptyHandLost((CHARACTERGUID)_Player)
THEN
//CharacterStatusText(_Player, "LLWEAPONEX_Status_DuelistStance_Warning");
ShowNotification(_Player, "LLWEAPONEX_Status_DuelistStance_Warning");
RemoveStatus(_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST");

PROC
LeaderLib_Skills_BlockStatusToggle((CHARACTERGUID)_Player, "Shout_LLWEAPONEX_Rapier_DuelistStance", "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST")
AND
GetUUID(_Player, _UUID)
AND
NOT NRD_ModQuery2("WeaponExpansion", "HasEmptyHand", _UUID, "true")
THEN
ShowNotification(_Player, "LLWEAPONEX_Status_DuelistStance_Failed");
DB_LeaderLib_Skills_BlockStatusToggle(_Player, "Shout_LLWEAPONEX_Rapier_DuelistStance", "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST");

PROC
LeaderLib_Statuses_BlockPermanentStatus((CHARACTERGUID)_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", "LLWEAPONEX_DuelistStanceWasEnabled")
AND
NOT LLWEAPONEX_WeaponMastery_QRY_HasActiveMastery(_Player, "LLWEAPONEX_Rapier")
THEN
DB_LeaderLib_Statuses_PermanentStatusBlocked(_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", "LLWEAPONEX_DuelistStanceWasEnabled");

PROC
LeaderLib_Statuses_BlockPermanentStatus((CHARACTERGUID)_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", "LLWEAPONEX_DuelistStanceWasEnabled")
AND
NOT DB_LeaderLib_Statuses_PermanentStatusBlocked(_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", "LLWEAPONEX_DuelistStanceWasEnabled")
AND
GetUUID(_Player, _UUID)
AND
NOT NRD_ModQuery2("WeaponExpansion", "HasEmptyHand", _UUID, "true")
THEN
DB_LeaderLib_Statuses_PermanentStatusBlocked(_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", "LLWEAPONEX_DuelistStanceWasEnabled");
//END_REGION

//REGION DUELIST_STANCE_WEAPON_BUFF
IF
CharacterStatusApplied(_Char, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", _)
THEN
ApplyStatus(_Char, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST_WEAPON", -1.0, 1, _Char);

IF
CharacterStatusRemoved(_Char, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", _)
THEN
RemoveStatus(_Char, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST_WEAPON");
//END_REGION

//REGION SUCKER_PUNCH_COMBO
IF
SkillCast(_Char, "Target_LLWEAPONEX_Rapier_SuckerCombo1", _, _)
THEN
LeaderLib_Timers_StartObjectTimer(_Char, 1200, "Timers_LLWEAPONEX_Rapiers_ClearSuckerComboStatus1", "LLWEAPONEX_Rapiers_ClearSuckerComboStatus1");

IF
StoryEvent(_Char, "LLWEAPONEX_Rapiers_ClearSuckerComboStatus1")
THEN
RemoveStatus(_Char, "LLWEAPONEX_RAPIER_MASTERY_SUCKERCOMBO1");

IF
CharacterUsedSkill(_Char, "Target_LLWEAPONEX_Rapier_SuckerCombo2", _, _)
THEN
RemoveStatus(_Char, "LLWEAPONEX_RAPIER_MASTERY_SUCKERCOMBO1");

IF
SkillCast(_Char, "Target_LLWEAPONEX_Rapier_SuckerCombo2", _, _)
THEN
LeaderLib_Timers_StartObjectTimer(_Char, 1200, "Timers_LLWEAPONEX_Rapiers_ClearSuckerComboStatus2", "LLWEAPONEX_Rapiers_ClearSuckerComboStatus2");

IF
StoryEvent(_Char, "LLWEAPONEX_Rapiers_ClearSuckerComboStatus2")
THEN
RemoveStatus(_Char, "LLWEAPONEX_RAPIER_MASTERY_SUCKERCOMBO2");

IF
CharacterUsedSkillOnTarget(_Char, _Target, "Target_LLWEAPONEX_Rapier_SuckerCombo2", _, _)
THEN
DB_LLWEAPONEX_Rapiers_Temp_SuckerCombo2Target((GUIDSTRING)_Char, (GUIDSTRING)_Target);
LeaderLib_Timers_StartObjectObjectTimer((GUIDSTRING)_Char, _Target, 2000, "Timers_LLWEAPONEX_Rapiers_SuckerCombo2Fallback", "LLWEAPONEX_Rapiers_SuckerCombo2Fallback");

PROC
LeaderLib_Timers_ObjectObjectTimerFinished(_Char, _Target, "LLWEAPONEX_Rapiers_SuckerCombo2Fallback")
AND
DB_LLWEAPONEX_Rapiers_Temp_SuckerCombo2Target(_Char, _Target)
THEN
NOT DB_LLWEAPONEX_Rapiers_Temp_SuckerCombo2Target(_Char, _Target);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_RAPIER_MASTERY_SUCKERCOMBO2_FLYING", _Char)
AND
DB_LLWEAPONEX_Rapiers_Temp_SuckerCombo2Target((GUIDSTRING)_Char, (GUIDSTRING)_Target)
THEN
LeaderLib_Timers_RestartObjectObjectTimer(_Char, _Target, "Timers_LLWEAPONEX_Rapiers_SuckerCombo2Fallback", 1500);
LeaderLib_Force_Apply(_Char, _Target, 3, "LLWEAPONEX_Rapier_SuckerCombo2_Landed");

PROC
LeaderLib_Force_OnLanded((GUIDSTRING)_Target, (GUIDSTRING)_Char, "LLWEAPONEX_Rapier_SuckerCombo2_Landed")
AND
DB_LLWEAPONEX_Rapiers_Temp_SuckerCombo2Target(_Char, _Target)
THEN
NOT DB_LLWEAPONEX_Rapiers_Temp_SuckerCombo2Target(_Char, _Target);
RemoveStatus(_Target, "LLWEAPONEX_RAPIER_MASTERY_SUCKERCOMBO2_FLYING");

IF
SkillCast(_Char, "Target_LLWEAPONEX_Rapier_SuckerCombo2", _, _)
AND
CharacterHasSkill(_Char, "Target_SingleHandedAttack", 1)
THEN
NRD_SkillSetCooldown(_Char, "Target_SingleHandedAttack", 0.0);
//END_REGION

//REGION FLICKER_STRIKE
QRY
LLWEAPONEX_Rapiers_QRY_HasFrenzyCharge((CHARACTERGUID)_Char)
AND
DB_LLWEAPONEX_Rapiers_FrenzyCharge(_Status)
AND
HasActiveStatus(_Char, _Status, 1)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Rapiers_QRY_RemoveFrenzyCharge((CHARACTERGUID)_Char)
AND
DB_LLWEAPONEX_Rapiers_FrenzyCharge(_Status)
AND
NOT DB_LLWEAPONEX_Rapiers_Temp_RemovedCharge(_Char)
AND
HasActiveStatus(_Char, _Status, 1)
THEN
DB_LLWEAPONEX_Rapiers_Temp_RemovedCharge(_Char);
RemoveStatus(_Char, _Status);

QRY
LLWEAPONEX_Rapiers_QRY_RemoveFrenzyCharge((CHARACTERGUID)_Char)
AND
DB_LLWEAPONEX_Rapiers_Temp_RemovedCharge(_Char)
THEN
NOT DB_LLWEAPONEX_Rapiers_Temp_RemovedCharge(_Char);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_RAPIER_FLICKER_HIT", (CHARACTERGUID)_Source)
AND
LeaderLib_Roll_QRY(499)
THEN
ApplyStatus(_Source, "LLWEAPONEX_RAPIER_FRENZY_CHARGE", 6.0, 1, _Source);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_RAPIER_FLICKER_HIT", (CHARACTERGUID)_Source)
THEN
LeaderLib_Timers_RestartCharacterCharacterTimer(_Source, "LLWEAPONEX_FlickerStrike_CheckForContinue", 900);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_RAPIER_FLICKER_HIT", (CHARACTERGUID)_Source)
THEN
LeaderLib_Timers_StartCharacterCharacterTimer(_Source, _Target, 250, "LLWEAPONEX_Timers_FlickerStrike_CheckForContinue", "LLWEAPONEX_FlickerStrike_CheckForContinue");

IF
SkillCast(_Source, "MultiStrike_LLWEAPONEX_Rapier_FlickerStrike", _, _)
THEN
LeaderLib_Timers_RestartCharacterCharacterTimer(_Source, "LLWEAPONEX_FlickerStrike_CheckForContinue", 500);
CharacterFlushQueue(_Source);

IF
CharacterCharacterEvent(_Source, _Target, "LLWEAPONEX_FlickerStrike_CheckForContinue")
AND
LLWEAPONEX_Rapiers_QRY_HasFrenzyCharge(_Source)
AND
NOT DB_LLWEAPONEX_Rapiers_Temp_FlickerStrikeTargetSearch(_Source)
THEN
DB_LLWEAPONEX_Rapiers_Temp_FlickerStrikeTargetSearch(_Source);
LLWEAPONEX_Rapiers_FlickerStrike_FindNext(_Source, _Target);

IF
CharacterCharacterEvent(_Source, _Target, "LLWEAPONEX_FlickerStrike_CheckForContinue")
AND
NOT DB_LLWEAPONEX_Rapiers_Temp_FlickerStrikeTargetSearch(_Source)
THEN
PlayEffect(_Source, "RS3_FX_Skills_Warrior_BlinkStrike_Reappear_01");

PROC
LLWEAPONEX_Rapiers_FlickerStrike_FindNext((CHARACTERGUID)_Source, (CHARACTERGUID)_LastTarget)
AND
DB_LLWEAPONEX_Rapiers_Temp_FlickerStrikeTargetSearch(_Source)
AND
CharacterIsInCombat(_Source, 1)
AND
CombatGetIDForCharacter(_Source, _CombatID)
AND
LLWEAPONEX_Rapiers_FlickerStrike_Internal_QRY_FindNextEnemy(_Source, _LastTarget, _CombatID)
AND
DB_LLWEAPONEX_Rapiers_Temp_FlickerStrike_Next(_Source, (CHARACTERGUID)_Enemy)
AND
LLWEAPONEX_Rapiers_QRY_RemoveFrenzyCharge(_Source)
THEN
NOT DB_LLWEAPONEX_Rapiers_Temp_FlickerStrikeTargetSearch(_Source);
NOT DB_LLWEAPONEX_Rapiers_Temp_FlickerStrike_Next(_Source, _Enemy);
LeaderLib_Timers_StartCharacterCharacterTimer(_Source, _Enemy, 50, "LLWEAPONEX_Timers_FlickerStrike_FireBonusHit", "LLWEAPONEX_FlickerStrike_FireBonusHit");

QRY
LLWEAPONEX_Rapiers_FlickerStrike_Internal_QRY_FindNextEnemy((CHARACTERGUID)_Source, (CHARACTERGUID)_LastTarget, (INTEGER)_CombatID)
THEN
LLWEAPONEX_Rapiers_FlickerStrike_Internal_TryFindNextEnemy(_Source, _LastTarget, _CombatID);
LLWEAPONEX_Rapiers_FlickerStrike_Internal_TryFindNextEnemy(_Source, _LastTarget, _CombatID);
LLWEAPONEX_Rapiers_FlickerStrike_Internal_TryFindNextEnemy(_Source, _LastTarget, _CombatID);
LLWEAPONEX_Rapiers_FlickerStrike_Internal_TryFindNextEnemyFallback(_Source, _LastTarget, _CombatID);

PROC
LLWEAPONEX_Rapiers_FlickerStrike_Internal_TryFindNextEnemy((CHARACTERGUID)_Source, (CHARACTERGUID)_LastTarget, (INTEGER)_CombatID)
AND
NOT DB_LLWEAPONEX_Rapiers_Temp_FlickerStrike_Next(_Source, _)
AND
LeaderLib_Combat_QRY_GetRandomEnemy(_Source, _CombatID, 0)
AND
DB_LeaderLib_Combat_Temp_RandomEnemy(_CombatID, _Source, _Enemy, _Index)
AND
(CHARACTERGUID)_Enemy != _LastTarget
AND
GetDistanceTo(_Source, _Enemy, _Dist)
AND
_Dist <= 8.0
THEN
DB_LLWEAPONEX_Rapiers_Temp_FlickerStrike_Next(_Source, _Enemy);

PROC
LLWEAPONEX_Rapiers_FlickerStrike_Internal_TryFindNextEnemyFallback((CHARACTERGUID)_Source, (CHARACTERGUID)_LastTarget, (INTEGER)_CombatID)
AND
NOT DB_LLWEAPONEX_Rapiers_Temp_FlickerStrike_Next(_Source, _)
AND
CharacterIsDead(_LastTarget, 0)
THEN
DB_LLWEAPONEX_Rapiers_Temp_FlickerStrike_Next(_Source, _LastTarget);

PROC
LLWEAPONEX_Rapiers_FlickerStrike_FindNext((CHARACTERGUID)_Source, (CHARACTERGUID)_LastTarget)
AND
DB_LLWEAPONEX_Rapiers_Temp_FlickerStrikeTargetSearch(_Source)
AND
CharacterIsInCombat(_Source, 0)
AND
String(_Source, _SourceID)
AND
StringConcatenate("LLWEAPONEX_Iterator_FlickerStrike_", _SourceID, _IteratorEvent)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_10_Rapiers:FlickerStrike_FindNext] Searching for next target out of combat.");
ProcObjectTimer(_Source, "LLWEAPONEX_Timers_FlickerStrike_ClearIterator", 1000);
DB_LLWEAPONEX_Rapiers_Temp_FlickerStrikeIterator(_Source, _LastTarget, _IteratorEvent);
CharacterLaunchIteratorAroundObject(_Source, 6.0, _IteratorEvent);

PROC
LLWEAPONEX_Rapiers_FlickerStrike_FindNext((CHARACTERGUID)_Source, (CHARACTERGUID)_LastTarget)
AND
DB_LLWEAPONEX_Rapiers_Temp_FlickerStrikeTargetSearch(_Source)
THEN
NOT DB_LLWEAPONEX_Rapiers_Temp_FlickerStrikeTargetSearch(_Source);

PROC
LLWEAPONEX_Rapiers_FlickerStrike_FindNext((CHARACTERGUID)_Source, (CHARACTERGUID)_LastTarget)
AND
DB_LLWEAPONEX_Rapiers_Temp_FlickerStrike_Next(_Source, _Enemy)
THEN
NOT DB_LLWEAPONEX_Rapiers_Temp_FlickerStrike_Next(_Source, _Enemy);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Source, "LLWEAPONEX_Timers_FlickerStrike_ClearIterator")
AND
DB_LLWEAPONEX_Rapiers_Temp_FlickerStrikeIterator(_Source, _LastTarget, _IteratorEvent)
THEN
NOT DB_LLWEAPONEX_Rapiers_Temp_FlickerStrikeIterator(_Source, _LastTarget, _IteratorEvent);

IF
StoryEvent((CHARACTERGUID)_Char, _IteratorEvent)
AND
DB_LLWEAPONEX_Rapiers_Temp_FlickerStrikeIterator(_Source, _LastTarget, _IteratorEvent)
AND
_Char != _LastTarget
AND
CharacterIsEnemy(_Char, _Source, 1)
AND
LLWEAPONEX_Rapiers_QRY_RemoveFrenzyCharge(_Source)
THEN
NOT DB_LLWEAPONEX_Rapiers_Temp_FlickerStrikeIterator(_Source, _LastTarget, _IteratorEvent);
LeaderLib_Timers_StartCharacterCharacterTimer(_Source, _Char, 250, "LLWEAPONEX_Timers_FlickerStrike_FireBonusHit", "LLWEAPONEX_FlickerStrike_FireBonusHit");

IF
CharacterCharacterEvent(_Source, _Target, "LLWEAPONEX_FlickerStrike_FireBonusHit")
THEN
LeaderLib_Behavior_TeleportTo(_Source, _Target);
LeaderLib_Timers_StartObjectTimer(_Source, 5, "Timers_LLWEAPONEX_FlickerStrike_Teleported", "LLWEAPONEX_FlickerStrike_Teleported");
LeaderLib_Timers_StartCharacterCharacterTimer(_Source, _Target, 25, "LLWEAPONEX_Timers_FlickerStrike_LookAtTarget", "LLWEAPONEX_FlickerStrike_LookAtTarget");
LeaderLib_Timers_StartCharacterCharacterTimer(_Source, _Target, 150, "LLWEAPONEX_Timers_FlickerStrike_CheckForContinue", "LLWEAPONEX_FlickerStrike_CheckForContinue");

IF
CharacterCharacterEvent(_Source, _Target, "LLWEAPONEX_FlickerStrike_LookAtTarget")
THEN
CharacterLookAt(_Source, _Target, 1);
LeaderLog_Log("DEBUG", "[LLWEAPONEX_10_Rapiers:FlickerStrike] Test!");

IF
TextEventSet("llweap_flickerdamage")
AND
CharacterGetHostCharacter(_Host)
AND
DB_CombatCharacters(_Char, _CombatID)
AND
_Host != _Char
THEN
CharacterCharacterSetEvent(_Host, _Char, "LLWEAPONEX_FlickerStrike_FireBonusHit");
//END_REGION

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_00_PostCC"
