Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_GameHour(300000); //5 minutes
/*
SysClear("DB_GameHour", 1);
DB_GameHour(120000);

SysClear("DB_Time", 3);
DB_Time(1,11,11);

SysClear("DB_HalfHour", 3);
DB_HalfHour(22,22);

TimerCancel("TimeOfDay");
StartTimeOfDayTimerLoop();

TriggerResetAtmosphere(TRIGGERGUID_S_LLWEAPONEX_Debug_DayNightAtmoTrigger_85e62279-a4fd-4573-a287-062f46c96fe1);
*/
//TRIGGERGUID_LLWEAPONEX_Debug_DayNightAtmoTrigger_85e62279-a4fd-4573-a287-062f46c96fe1
//ATMOSPHERERESOURCEGUID_LLWEAPONEX_ATM_Desert_01_CameraEdit_57690f2e-466a-4d38-a071-74b109cedef4
//ATMOSPHERERESOURCEGUID_LLWEAPONEX_ATM_PBR_DOS2_Night_Blue_CameraEdit_f2e42e22-7126-47cc-9ded-5770cc83507c
/*
DB_LLWEAPONEX_Debug_TimeAtmospheres("Midnight", "9d066ac1-715d-4a9c-810c-f7d380a1d4bd", 0, 3);
DB_LLWEAPONEX_Debug_TimeAtmospheres("Morning", "54db744e-8227-451a-9540-94877f0598f1", 4, 10);
DB_LLWEAPONEX_Debug_TimeAtmospheres("Afternoon", "57690f2e-466a-4d38-a071-74b109cedef4", 11, 16);
DB_LLWEAPONEX_Debug_TimeAtmospheres("Evening", "36eae440-f603-4bdd-9343-2d6ba7d87eb1", 17, 19);
DB_LLWEAPONEX_Debug_TimeAtmospheres("Night", "293f6672-6fa0-4895-a0e7-c1a963c6b650", 20, 24);
*/
//DB_LLWEAPONEX_Debug_TimeAtmospheres("Midnight", "9d066ac1-715d-4a9c-810c-f7d380a1d4bd", 0, 4);
//DB_LLWEAPONEX_Debug_TimeAtmospheres("Morning", "54db744e-8227-451a-9540-94877f0598f1", 5, 11);
//DB_LLWEAPONEX_Debug_TimeAtmospheres("Afternoon", "57690f2e-466a-4d38-a071-74b109cedef4", 12, 17);
//DB_LLWEAPONEX_Debug_TimeAtmospheres("Evening", "36eae440-f603-4bdd-9343-2d6ba7d87eb1", 18, 20);
//DB_LLWEAPONEX_Debug_TimeAtmospheres("Night", "293f6672-6fa0-4895-a0e7-c1a963c6b650", 21, 23);
//DB_LLWEAPONEX_Debug_Atmospheres("Storm", "09edc0f3-c27e-414a-a053-a4c1d2d1271a");
//DB_LLWEAPONEX_Debug_Atmospheres("BloodForest", "4b41cfe5-35bc-4473-b50c-59301e38ef9f");
DB_LLWEAPONEX_Debug_PreserveStatus(Lizards_Hero_Male_Undead_001_c93c704c-41cf-4da2-99d8-f5051cdbf66b, "INVISIBLE", 20000);
DB_LLWEAPONEX_Debug_PreserveStatus(Lizards_Hero_Male_001_270b72cd-90e5-480e-9677-69040d566818, "INVISIBLE", 20000);
DB_LLWEAPONEX_Debug_PreserveStatus(Lizards_Hero_Male_Undead_002_52da4999-c2e9-42aa-9c07-209a456e3289, "INVISIBLE", 20000);
//LLWEAPONEX_UniqueManager_Register_Owner(S_LLWEAPONEX_Humans_Male_Skeleton_Harvester_A_666f5fd9-945d-4f3a-819e-cabb9510be23, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_SoulHarvest_A_c308b26a-98d1-4429-8cce-4940f6eb5f69", "TestLevel_LL_WeaponExpansion");
//GlobalSetFlag("LeaderLog_Trace_Enabled");
LLWEAPONEX_Nodes_Register_EnemySpawner("TestLevel_LL_WeaponExpansion", "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_SoulHarvest_A_c308b26a-98d1-4429-8cce-4940f6eb5f69", S_LLWEAPONEX_Humans_Male_Skeleton_Harvester_A_666f5fd9-945d-4f3a-819e-cabb9510be23, 40.144, 0.0, 7.836);

GlobalSetFlag("LLWEAPONEX_Debug_AutoRefreshCooldowns");
SysActivateGoal("LeaderLib_20_DebugLevel");
GlobalClearFlag("LeaderLog_DebugStatus_Enabled");
GlobalClearFlag("LeaderLog_DebugEvents_Enabled");
GlobalClearFlag("LeaderLog_DebugDialog_Enabled");
GlobalClearFlag("LeaderLog_Trace_Enabled");
GlobalSetFlag("LeaderLog_Debug_Enabled");
GlobalSetFlag("LeaderLog_DebugStatus_Enabled");
DB_LLWEAPONEX_Debug_StatusClear("POISONED");
DB_LLWEAPONEX_Debug_StatusClear("BURNING");
DB_LLWEAPONEX_Debug_StatusClear("SLOWED");
DB_LLWEAPONEX_Debug_StatusClear("FAVOURABLE_WIND");
DB_LLWEAPONEX_Debug_StatusClear("DRUNK");
//LeaderLib_ToggleScripts_EnableScript("LeaderLib_Debug_Tracing_Hit", "WeaponExpansion");

KBSECTION
IF
CharacterStatusRemoved(CHARACTERGUID_Humans_Male_RedFaction_Brute_001_f2e09090-0eb8-4d24-bf8c-32ca42cb42f3, "ENRAGED", _)
THEN
LeaderLib_Timers_StartObjectTimer(CHARACTERGUID_Humans_Male_RedFaction_Brute_001_f2e09090-0eb8-4d24-bf8c-32ca42cb42f3, 1500, "Timers_LLWEAPONEX_Debug_ApplyEnraged", "LLWEAPONEX_Debug_ApplyEnraged");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Debug_ApplyEnraged")
THEN
ApplyStatus(_Char, "ENRAGED", 18.0, 0, _Char);

/*
IF
GameStarted(_,1)
AND
DB_LLWEAPONEX_Debug_StatusClear(_Status)
THEN
ApplyStatus(CHARACTERGUID_Lizards_Hero_Male_005_1cac5838-4c3f-4844-bb44-1c763a3ade16, _Status, -1.0, 1);
ApplyStatus(CHARACTERGUID_Creatures_VampireBat_A_000_0f95ed94-cfb4-4bf3-9b9c-51cbd7c256b3, _Status, -1.0, 1);
ApplyStatus(CHARACTERGUID_Lizards_Hero_Male_Undead_000_84f397e8-fdea-427a-a0ba-2e367a7eae45, _Status, -1.0, 1);
*/

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_DEBUG_TESTMISC", _)
AND
GetUUID(_Char, _UUID)
AND
StringConcatenate("Dervish_StatusArray_", _UUID, _ArrayName)
THEN
DB_MyMod_Temp_StatusArray(_Char, _ArrayName);

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_DEBUG_TESTMISC", _)
AND
DB_MyMod_Temp_StatusArray(_Char, _ArrayName)
AND
DB_LLWEAPONEX_Debug_StatusClear(_Status)
AND
HasActiveStatus(_Char, _Status, 1)
THEN 
LeaderLib_Array_AddToArray(_ArrayName, _Status);
LeaderLog_Log("DEBUG_EVENTS", "LLWEAPONEX_99_Debug_TestLevel:LLWEAPONEX_DEBUG_TESTMISC] (",_ArrayName,") Status: [",_Status,"] added to array [",_ArrayName,"].");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_DEBUG_TESTMISC", _)
AND
DB_MyMod_Temp_StatusArray(_Char, _ArrayName)
AND
LeaderLib_Array_QRY_Random(_ArrayName)
AND
DB_LeaderLib_Array_Temp_RandomResult(_ArrayName, _Index, _Status)
THEN
RemoveStatus(_Char, _Status);
CharacterStatusText(_Char, _Status);

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_DEBUG_TESTMISC", _)
AND
DB_MyMod_Temp_StatusArray(_Char, _ArrayName)
AND
NOT DB_LeaderLib_Array_Temp_RandomResult(_ArrayName, _, _)
AND
DB_LeaderLib_Random(_Index)
AND
IntegertoString(_Index, _IndexStr)
AND
DB_LeaderLib_Array_Length(_ArrayName, _Length)
THEN
NOT DB_LeaderLib_Random(_Index);
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX_99_Debug_TestLevel:LLWEAPONEX_DEBUG_TESTMISC](",_ArrayName,") No random result matches an index. DB_LeaderLib_Random(", _IndexStr, ")");
LeaderLog_LogInt("DEBUG", "[LLWEAPONEX_99_Debug_TestLevel:LLWEAPONEX_DEBUG_TESTMISC] --- Array length: (",_Length,")");
LeaderLib_Array_Debug_Print(_ArrayName);

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_DEBUG_TESTMISC", _)
AND
DB_MyMod_Temp_StatusArray(_Char, _ArrayName)
AND
DB_LeaderLib_Array_Temp_RandomResult(_ArrayName, _Index, _Status)
THEN
NOT DB_LeaderLib_Array_Temp_RandomResult(_ArrayName, _Index, _Status);
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX_99_Debug_TestLevel:LLWEAPONEX_DEBUG_TESTMISC](",_ArrayName,") Random result: ", _Status, "");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_DEBUG_TESTMISC", _)
AND
DB_MyMod_Temp_StatusArray(_Char, _ArrayName)
THEN
NOT DB_MyMod_Temp_StatusArray(_Char, _ArrayName);
LeaderLib_Array_ClearArray(_ArrayName);

IF
TextEventSet("llweap_gold")
AND
CharacterGetHostCharacter(_Obj)
THEN
ItemTemplateAddTo("LOOT_Gold_A_1c3c9c74-34a1-4685-989e-410dc080be6f", _Obj, 333, 1);

IF
GameStarted(_,1)
AND
DB_LLWEAPONEX_Debug_PreserveStatus(_Object, _Status, _Delay)
THEN
ApplyStatus(_Object, _Status, -1.0, 0, _Object);

IF
CharacterStatusRemoved(_Object, _Status, _)
AND
CharacterIsDead(_Object, 0)
AND
DB_LLWEAPONEX_Debug_PreserveStatus((GUIDSTRING)_Object, _Status, _Delay)
THEN
ProcObjectTimer(_Object, "LLWEAPONEX_Timers_Debug_PreserveStatus", _Delay);

PROC
ProcObjectTimerFinished(_Object, "LLWEAPONEX_Timers_Debug_PreserveStatus")
AND
DB_LLWEAPONEX_Debug_PreserveStatus(_Object, _Status, _Delay)
THEN
ApplyStatus(_Object, _Status, -1.0, 0, _Object);

IF
TextEventSet("llweap_vartest")
AND
CharacterGetHostCharacter(_Host)
THEN
SetStoryEvent(_Host, "LLWEAPONEX_Debug_VarTest");
DB_LLWEAPONEX_Debug_CombatTimer(0);

/*
IF
StoryEvent((CHARACTERGUID)_Host, "LLWEAPONEX_Debug_VarTest_Check")
AND
GetVarString(_Host, "LLWEAPONEX_Debug_VarTest.Str", _Str)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest] [LLWEAPONEX_Debug_VarTest.Str] == [",_Str,"]");
CharacterStatusText(_Host, _Str);

IF
StoryEvent((CHARACTERGUID)_Host, "LLWEAPONEX_Debug_VarTest_Check")
AND
NOT GetVarString(_Host, "LLWEAPONEX_Debug_VarTest.Str", _)
THEN
DebugBreak("[LLWEAPONEX_Debug_VarTest] Var [LLWEAPONEX_Debug_VarTest.Str] is not set!");
CharacterStatusText(_Host, "[LLWEAPONEX_Debug_VarTest] Var [LLWEAPONEX_Debug_VarTest.Str] is not set!");
*/
/*
IF
StoryEvent((CHARACTERGUID)_Host, "LLWEAPONEX_Debug_VarTest_Check")
AND
GetVarFixedString(_Host, "CharacterCreationStarted.Class", _Str)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest] [CharacterCreationStarted.Class] == [",_Str,"]");
CharacterStatusText(_Host, _Str);

IF
StoryEvent((CHARACTERGUID)_Host, "LLWEAPONEX_Debug_VarTest_Check")
AND
NOT GetVarFixedString(_Host, "CharacterCreationStarted.Class", _)
THEN
DebugBreak("[LLWEAPONEX_Debug_VarTest] Var [CharacterCreationStarted.Class] is not set!");
CharacterStatusText(_Host, "[LLWEAPONEX_Debug_VarTest] Var [CharacterCreationStarted.Class] is not set!");
*/
//REGION AI_MANIP_TEST
/*
IF
CombatStarted(_CombatID)
THEN
DB_LLWEAPONEX_Debug_CombatTimer(_CombatID);
TimerLaunch("LLWEAPONEX_Debug_CombatTimer", 500);
*/

IF
TimerFinished("LLWEAPONEX_Debug_CombatTimer")
AND
DB_LLWEAPONEX_Debug_CombatTimer(_CombatID)
AND
DB_LeaderLib_Combat_ActiveObject(_CombatID, _Char)
AND
CharacterIsPlayer((CHARACTERGUID)_Char, 0)
THEN
//CharacterAddSkill(_Char, "Target_LLWEAPONEX_Debug_SingleHandedAttack", 0);
ClearVarObject(_Char, "Combat_AI_CastSkill.TargetPos1");
SetVarObject(_Char, "Combat_AI_CastSkill.TargetCharacter1", _Char);
//SetVarFixedString(_Char, "Combat_AI_CastSkill.Skill", "Target_LLWEAPONEX_Debug_SingleHandedAttack");
//SetStoryEvent(_Char, "LLWEAPONEX_Debug_OverrideSkill");

/*
AND
String(_Char, _CharStr)
AND
GetPosition(_Char, _x, _y, _z)
THEN
//LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest] Overwriting [Combat_AI_CastSkill_Skill] var on [",_CharStr,"].");

SetVarFixedString(_Char, "Combat_AI_CastSkill.Skill", "Target_LLWEAPONEX_Debug_SingleHandedAttack");
SetVarFloat3(_Char, "Combat_AI_CastSkill.TargetPos1", _x, _y, _z);
SetVarFloat3(_Char, "Combat_AI_CastSkill.TargetPos2", _x, _y, _z);
SetVarObject(_Char, "Combat_AI_CastSkill.TargetCharacter1", _Char);
*/

IF
TimerFinished("LLWEAPONEX_Debug_CombatTimer")
AND
DB_LLWEAPONEX_Debug_CombatTimer(_CombatID)
AND
DB_LeaderLib_Combat_ActiveObject(_CombatID, _Char)
AND
CharacterIsPlayer((CHARACTERGUID)_Char, 0)
AND
GetVarFixedString(_Char, "Combat_AI_CastSkill.Skill", _Skill)
AND
String(_Char, _CharStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest] [Combat_AI_CastSkill.Skill] == [",_Skill,"] on [",_CharStr,"].");

IF
TimerFinished("LLWEAPONEX_Debug_CombatTimer")
AND
DB_LLWEAPONEX_Debug_CombatTimer(_CombatID)
THEN
TimerLaunch("LLWEAPONEX_Debug_CombatTimer", 1);

//END_REGION

//REGION BEHAVIOR_VARIABLE_MANIP
/*
IF
StoryEvent(_Char, "LLWEAPONEX_Debug_OnFetchCharacterApplyStatusData")
AND
//GetVarFixedString(_Char, "LLWEAPONEX_Debug_FetchTest.Status", _Status)
GetVarFixedString(_Char, "LLWEAPONEX_Debug_FetchStatus", _Status)
AND
String(_Char, _CharStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest:OnFetchCharacterApplyStatusData] [",_Status,"] on [",_CharStr,"].");

IF
StoryEvent(_Char, "LLWEAPONEX_Debug_OnFetchCharacterApplyStatusData")
AND
NOT GetVarFixedString(_Char, "LLWEAPONEX_Debug_FetchStatus", _)
AND
String(_Char, _CharStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest:OnFetchCharacterApplyStatusData] Could not get STATUS var on [",_CharStr,"].");

IF
StoryEvent(_Char, "LLWEAPONEX_Debug_OnFetchCharacterApplyStatusData")
AND
GetVarFixedString(NULL_00000000-0000-0000-0000-000000000000, "LLWEAPONEX_Debug_FetchTest.Status", _Status)
AND
String(_Char, _CharStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest:OnFetchCharacterApplyStatusData] [",_Status,"] from gameScript.");

IF
StoryEvent(_Char, "LLWEAPONEX_Debug_OnFetchCharacterApplyStatusData")
AND
NOT GetVarFixedString(NULL_00000000-0000-0000-0000-000000000000, "LLWEAPONEX_Debug_FetchTest.Status", _)
AND
String(_Char, _CharStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest:OnFetchCharacterApplyStatusData] Could not get STATUS var from gameScript.");

IF
StoryEvent(_Char, "LLWEAPONEX_Debug_TraceDamage")
THEN
LeaderLib_Timers_StartObjectTimer(_Char, 250, "LLWEAPONEX_Timers_Debug_TraceList", "LLWEAPONEX_Debug_TraceList");

IF
StoryEvent(_Char, "LLWEAPONEX_Debug_TraceList")
AND
GetVarInteger(_Char, "DebugMessages_ListSize", _ListSize)
THEN
LLWEAPONEX_Debug_BuildListVars(0, "DebugMessages", _ListSize);

PROC
LLWEAPONEX_Debug_BuildListVars((INTEGER)_Index, (STRING)_Variable, (INTEGER)_ListSize)
AND
_Index < _ListSize
AND
IntegerSum(_Index, 1, _NextIndex)
AND
IntegertoString(_Index, _IndexStr)
AND
StringConcatenate(_Variable, "_Index_", _Str1)
AND
StringConcatenate(_Str1, _IndexStr, _ListEntryVar)
THEN
DB_LLWEAPONEX_Debug_ListVars(_Variable, _ListEntryVar);
LLWEAPONEX_Debug_BuildListVars(_NextIndex, _Variable, _ListSize);

IF
StoryEvent(_Char, "LLWEAPONEX_Debug_TraceList")
AND
DB_LLWEAPONEX_Debug_ListVars("DebugMessages", _ListEntryVar)
AND
GetVarFixedString(_Char, _ListEntryVar, _Str)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest] [",_ListEntryVar,"] == ",_Str,"");

IF
StoryEvent(_Char, "LLWEAPONEX_Debug_TraceList")
THEN
SysClear("DB_LLWEAPONEX_Debug_ListVars", 2);
*/

/*
IF
StoryEvent(_Char, "LLWEAPONEX_Debug_TraceDamage")
AND
GetVarString(_Char, "LLWEAPONEX_Debug_LastDamageType", _Str)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest] [LLWEAPONEX_Debug_LastDamageType] == [",_Str,"]");

IF
StoryEvent(_Char, "LLWEAPONEX_Debug_TraceDamage")
AND
GetVarString(_Char, "LLWEAPONEX_Debug_Damage.DamageType", _Str)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest] [LLWEAPONEX_Debug_Damage.DamageType] == [",_Str,"]");
SetVarInteger(_Char, "LLWEAPONEX_Debug_TraceDamage_Done", 1);
*/

/*
IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Debug_TraceDamage")
AND
GetVarString(_Char, "LLWEAPONEX_Debug_Damage._Damage", _Str)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest] [LLWEAPONEX_Debug_Damage._Damage] == [",_Str,"]");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Debug_TraceDamage")
AND
GetVarObject(_Char, "LLWEAPONEX_Debug_Damage._Damage", _Damage)
AND
String(_Damage, _Str)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest] [LLWEAPONEX_Debug_Damage._Damage] == [",_Str,"]");
*/
IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Debug_VarTest_Check")
AND
GetPosition(CHARACTERGUID_DW_Voidling_A_004_4d7beedc-1c20-4307-9515-ab099d656f53, _x, _y, _z)
AND
FindValidPosition(_x, _y, _z, 3.0, _Char, _tx, _ty, _tz)
THEN
SetVarObject(_Char, "Combat_AI_Attack.TargetCharacter", CHARACTERGUID_DW_Voidling_A_004_4d7beedc-1c20-4307-9515-ab099d656f53);
SetVarFloat3(_Char, "Combat_AI_Attack.EndPosition", _tx, _ty, _tz);

/*
IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Debug_VarTest_Check")
AND
GetVarObject(_Char, "Combat_AI_Attack.TargetCharacter", _Obj)
AND
String(_Obj, _Target)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponEx:VarTest] [Combat_AI_Attack.TargetCharacter] == [",_Target,"]");
DisplayText(_Obj, "AI Target!");
*/

/*
IF
StoryEvent((CHARACTERGUID)_Host, "LLWEAPONEX_Debug_VarTest_Check")
AND
NOT GetVarFixedString(_Host, "Combat_AI_Attack.Class", _)
THEN
DebugBreak("[LLWEAPONEX_Debug_VarTest] Var [CharacterClassChanged.Class] is not set!");
CharacterStatusText(_Host, "[LLWEAPONEX_Debug_VarTest] Var [CharacterClassChanged.Class] is not set!");
*/
//END_REGION

IF
TextEventSet("llweap_tprez")
THEN
TeleportTo(Dwarves_Male_Skeleton_A_001_589887ae-4373-4773-9747-9da8cd14ad4f, AIHintAreaTrigger_000_efffe2d1-83c9-483b-8680-942a26585699, "KF_RSCG_Resurrect", 0, 1, 1);

IF
StoryEvent((CHARACTERGUID)_Char, "KF_RSCG_Resurrect")
THEN
CharacterResurrect(_Char);

IF
TextEventSet("llweap_iterateparty")
THEN
IterateParties("LLWEAPONEX_Debug_IteratorTest");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Debug_IteratorTest")
THEN
CharacterStatusText(_Char, "[IterateParties] Target!");

IF
TextEventSet("test_deltamod_crash")
AND
CharacterGetHostCharacter(_Host)
AND
GetPosition(_Host, _x, _y, _z)
AND
//CreateItemTemplateAtPosition("6f6423e7-ad9b-4b17-8934-75bdbc45bc08", _x, _y, _z, _Item)
CreateItemTemplateAtPosition("LLWEAPONEX_Debug_Greatbow_Lightning_Bow_2H_A_a562214b-4a98-401a-bbfb-636bcf971900", _x, _y, _z, _Item)
THEN
ItemLevelUpTo(_Item, 11);
ItemAddDeltaModifier(_Item, "Boost_Weapon_Ability_AirSpecialist_Wand");
ItemAddDeltaModifier(_Item, "Boost_Weapon_Primary_Intelligence_PrimaryAsLarge");
ItemAddDeltaModifier(_Item, "Boost_Weapon_Secondary_Dodge_TwoHanded");
ItemAddDeltaModifier(_Item, "Boost_Weapon_EmptyRuneSlot");
ItemAddDeltaModifier(_Item, "Boost_Weapon_Damage_Air_Medium_Bow");
CharacterStatusText(_Host, "Ready for Reload");
CharacterEquipItem(_Host, _Item);

/*
IF
GameStarted(_,1)
THEN
TimerCancel("LLWEAPONEX_Debug_DeltamodCrashTest");
TimerLaunch("LLWEAPONEX_Debug_DeltamodCrashTest", 1100);
*/

IF
TimerFinished("LLWEAPONEX_Debug_DeltamodCrashTest")
AND
CharacterGetHostCharacter(_Host)
AND
GetPosition(_Host, _x, _y, _z)
AND
CreateItemTemplateAtPosition("LLWEAPONEX_Debug_Greatbow_Lightning_Bow_2H_A_a562214b-4a98-401a-bbfb-636bcf971900", _x, _y, _z, _Item)
THEN
ItemLevelUpTo(_Item, 11);
ItemAddDeltaModifier(_Item, "Boost_Weapon_Ability_AirSpecialist_Wand");
ItemAddDeltaModifier(_Item, "Boost_Weapon_Primary_Intelligence_PrimaryAsLarge");
ItemAddDeltaModifier(_Item, "Boost_Weapon_Secondary_Dodge_TwoHanded");
ItemAddDeltaModifier(_Item, "Boost_Weapon_EmptyRuneSlot");
ItemAddDeltaModifier(_Item, "Boost_Weapon_Damage_Air_Medium_Bow");
CharacterStatusText(_Host, "Ready for Reload");
CharacterEquipItem(_Host, _Item);
ObjectSetFlag(_Item, "LLWEAPONEX_AddedDeltamods", 0);

QRY
LLWEAPONEX_Debug_QRY_ItemHasDeltamods((ITEMGUID)_Item)
AND
LeaderLib_Growth_Items_QRY_ItemHasDeltaMods(_Item)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Debug_QRY_ItemHasDeltamods((ITEMGUID)_Item)
AND
ObjectGetFlag(_Item, "LLWEAPONEX_AddedDeltamods", 1)
THEN
DB_NOOP(1);

IF
RegionEnded(_)
AND
DB_IsPlayer(_Player)
AND
DB_LeaderLib_EquipmentSlots(_Slot)
AND
CharacterGetEquippedItem(_Player, _Slot, (ITEMGUID)_Item)
AND
LLWEAPONEX_Debug_QRY_ItemHasDeltamods(_Item)
THEN
ItemDrop(_Item);

/*
IF
GameStarted(_,_)
AND
DB_Time(_,_Hour,_)
THEN
LLWEAPONEX_Debug_SetTimeOfDay(_Hour);

PROC
NewHour((INTEGER)_Hour)
AND
IntegertoString(_Hour, _HourStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:NewHour] The hour is now [",_HourStr,"].");

PROC
NewHour((INTEGER)_Hour)
THEN
LLWEAPONEX_Debug_SetTimeOfDay(_Hour);

PROC
LLWEAPONEX_Debug_SetTimeOfDay((INTEGER)_Hour)
AND
DB_LLWEAPONEX_Debug_TimeAtmospheres(_TimeOfDay, _Atmosphere, _StartHour, _EndHour)
AND
NOT DB_LLWEAPONEX_Debug_TimeChanged(_)
AND
NOT DB_LLWEAPONEX_Debug_TimeOfDay(_TimeOfDay)
AND
_Hour >= _StartHour
AND
_Hour <= _EndHour
THEN
DB_LLWEAPONEX_Debug_TimeChanged(1);
//LeaderLib_SendEvent("LLWEAPONEX_Debug_SetAtmosphereToNight");
TriggerSetAtmosphere(TRIGGERGUID_S_LLWEAPONEX_Debug_DayNightAtmoTrigger_85e62279-a4fd-4573-a287-062f46c96fe1, _Atmosphere);
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:NewHour] Transitioning atmosphere to [",_TimeOfDay,"].");
SysClear("DB_LLWEAPONEX_Debug_TimeOfDay", 1);
DB_LLWEAPONEX_Debug_TimeOfDay(_TimeOfDay);

PROC
LLWEAPONEX_Debug_SetTimeOfDay((INTEGER)_Hour)
AND
DB_LLWEAPONEX_Debug_TimeChanged(_Val)
THEN
NOT DB_LLWEAPONEX_Debug_TimeChanged(_Val);
*/

IF
DialogStartRequested(_Target, _Player)
AND
String(_Target, _TargetName)
AND
String(_Player, _PlayerName)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:DialogStartRequested] Dialog requesting start between [",_TargetName,"] and [",_PlayerName,"]");

IF
DialogStarted(_Dialog, _InstanceID)
AND
IntegertoString(_InstanceID, _InstanceIDStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:DialogStarted] Dialog [",_Dialog,"] started. Instance [",_InstanceIDStr,"]");

IF
DualDialogRequested(_Dialog, _InstanceID, _TargetInstanceID)
AND
DB_DialogName(_ParentDialog, _InstanceID)
AND
IntegertoString(_InstanceID, _InstanceIDStr)
AND
IntegertoString(_TargetInstanceID, _TargetInstanceIDStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:DualDialogRequested] Dual dialog [",_Dialog,"] of parent [",_ParentDialog,"] requested. Instance [",_InstanceIDStr,"] and TargetInstance [",_TargetInstanceIDStr,"]");

IF
DualDialogStart(_Dialog, _InstanceID)
AND
IntegertoString(_InstanceID, _InstanceIDStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:DualDialogStart] Dual dialog [",_Dialog,"] started. Instance [",_InstanceIDStr,"]");

IF
ChildDialogRequested(_Dialog, _InstanceID, _TargetInstanceID)
AND
DB_DialogName(_ParentDialog, _InstanceID)
AND
IntegertoString(_InstanceID, _InstanceIDStr)
AND
IntegertoString(_TargetInstanceID, _TargetInstanceIDStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:ChildDialogRequested] Child dialog [",_Dialog,"] of parent [",_ParentDialog,"] requested. Instance [",_InstanceIDStr,"] and TargetInstance [",_TargetInstanceIDStr,"]");

IF
TextEventSet("llweap_runepreview")
AND
CharacterGetHostCharacter(_Host)
THEN
CharacterTransformAppearanceToWithEquipmentSet(_Host, _Host, "Class_LLWEAPONEX_RunicKnight_Debug", 0);

IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
THEN
//CharacterSetCustomName(_Host, "Morghul");
CharacterAddGold(_Host, 9999);
CharacterAddTalent(_Host, "LoneWolf");
//LLWEAPONEX_WeaponMastery_Debug_CheatMastery(_Host);

IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
AND
GetPosition(_Host, _x, _y, _z)
AND
CharacterGetLevel(_Host, _Level)
AND
_Level < 5
THEN
//CharacterLevelUpTo(_Host, 5);
CharacterAddAttributePoint(_Host, 10);
CharacterAddCivilAbilityPoint(_Host, 10);
CharacterAddAbilityPoint(_Host, 10);
CharacterAddTalentPoint(_Host, 2);

/*
IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
AND
NOT CharacterGetEquippedItem(_Host, "Breast", _)
THEN
//CharacterApplyPreset(_Host, "Rogue_Act2");
CharacterTransformAppearanceToWithEquipmentSet(_Host, _Host, "Class_LLWEAPONEX_RunicKnight_Debug_Humans", 0);
*/

/*
IF
TextEventSet("llweap_tptrigger")
AND
CharacterGetHostCharacter(_Host)
THEN
TeleportTo(TRIGGERGUID_S_LLWEAPONEX_Debug_DayNightAtmoTrigger_85e62279-a4fd-4573-a287-062f46c96fe1, _Host);
*/

IF
TextEventSet("llweap_applypresettest")
AND
GetTextEventParamString(1, _Preset)
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
CharacterApplyPreset(_Player, _Preset);

IF
TextEventSet("llweap_nulltest")
AND
CharacterGetHostCharacter(_Host)
AND
GetPosition(_Host, _x, _y, _z)
//AND
//TemporaryCharacterCreateAtPosition(_x, _y, _z, "Lizards_Hero_Male_fa12e21f-0a10-47dd-af46-ab2c9a53cf6d", 0, _Char)
THEN
TeleportTo(CHARACTERGUID_S_GLO_CharacterCreationDummy_002_361dacdc-4135-4d3f-a9a2-3cad46ca246a, _Host);
SetVarObject(_Host, "LLWEAPONEX_Debug_StatusTarget", CHARACTERGUID_S_GLO_CharacterCreationDummy_002_361dacdc-4135-4d3f-a9a2-3cad46ca246a);
CharacterFreeze(CHARACTERGUID_S_GLO_CharacterCreationDummy_002_361dacdc-4135-4d3f-a9a2-3cad46ca246a);
LeaderLib_Timers_StartCharacterCharacterTimer(_Host, CHARACTERGUID_S_GLO_CharacterCreationDummy_002_361dacdc-4135-4d3f-a9a2-3cad46ca246a, 580, "LLWEAPONEX_Timers_Debug_StartDialog", "LLWEAPONEX_Debug_StartDialog");
LeaderLib_Timers_StartObjectTimer(CHARACTERGUID_S_GLO_CharacterCreationDummy_002_361dacdc-4135-4d3f-a9a2-3cad46ca246a, 600, "LLWEAPONEX_Timers_Debug_DeleteTempChar", "LLWEAPONEX_Debug_DeleteTempChar");

IF
CharacterCharacterEvent(_Host, _Char, "LLWEAPONEX_Debug_StartDialog")
THEN
//ItemTemplateAddTo("CONT_Humans_Backpack_Merchant_A_360e3e11-c7f8-4281-848a-596e37df884b", _Char, 1);
//Proc_StartDialog(0, "LeaderLib_PresetMenu", _Char);
CharacterUnfreeze(_Char);
CharacterSetAnimationOverride(_Char,"");
PlayAnimation(_Char,"knockdown_getup","");
FadeToBlack(_Char,0.0,0,"Placeholder");
StartVoiceBark("FTJ_VB_WakeUpOnBeachNoHat",_Char);

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Debug_DeleteTempChar")
THEN
RemoveTemporaryCharacter(_Char);

IF
TextEventSet("llweap_vectortp")
THEN
CharacterCharacterSetEvent(S_Player_LLWEAPONEX_WeaponMaster_2842603d-a263-4f65-a164-4a2391afe349, S_Player_LLWEAPONEX_Korvash_3f20ae14-5339-4913-98f1-24476861ebd6, "LLWEAPONEX_Debug_TeleportVector");

IF
CharacterUsedSkill(_Character, _, _, _)
AND
CharacterGetHostCharacter(_Character)
AND
DB_GlobalFlag("LLWEAPONEX_Debug_AutoRefreshCooldowns")
THEN
CharacterResetCooldowns(_Character);

IF
TextEventSet("llweap_cd")
THEN
LeaderLib_Helper_FlipGlobalFlag("LLWEAPONEX_Debug_AutoRefreshCooldowns");

IF
TextEventSet("llweap_cd")
AND
CharacterGetHostCharacter(_Host)
AND
GlobalGetFlag("LLWEAPONEX_Debug_AutoRefreshCooldowns", _State)
AND
IntegertoString(_State, _StateStr)
THEN
LeaderLog_LogTarget("STATUS", _Host, "[LLWEAPONEX_Debug_AutoRefreshCooldowns] = ", _StateStr);

/*
IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
AND
NOT CharacterGetEquippedItem(_Host, "Breast", _)
AND
CharacterGetEquippedWeapon(_Host, _Weapon)
AND
GetTemplate(_Weapon, _Template)
AND
StringContains(_Template, "Quarterstaff", 1)
THEN
//CharacterApplyPreset(_Host, "Rogue_Act2");
CharacterTransformAppearanceToWithEquipmentSet(_Host, _Host, "Class_Rogue_Act2", 0);

IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
AND
NOT CharacterGetEquippedItem(_Host, "Breast", _)
AND
CharacterGetEquippedWeapon(_Host, _Weapon)
AND
GetTemplate(_Weapon, _Template)
AND
StringContains(_Template, "Runeblade", 1)
THEN
//CharacterApplyPreset(_Host, "Battlemage_Act2");
CharacterTransformAppearanceToWithEquipmentSet(_Host, _Host, "Class_Battlemage_Act2", 0);

IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
AND
NOT CharacterGetEquippedItem(_Host, "Breast", _)
AND
CharacterGetEquippedWeapon(_Host, _Weapon)
AND
GetTemplate(_Weapon, _Template)
AND
StringContains(_Template, "Rod", 1)
THEN
//CharacterApplyPreset(_Host, "Wizard_Act2");
CharacterTransformAppearanceToWithEquipmentSet(_Host, _Host, "Class_Wizard_Act2", 0);

IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
AND
NOT CharacterGetEquippedWeapon(_Host, _)
THEN
//CharacterApplyPreset(_Host, "Inquisitor_Act2");
CharacterTransformAppearanceToWithEquipmentSet(_Host, _Host, "Class_Inquisitor_Act2", 0);
*/

/*
IF
ItemTemplateEquipped("WPN_LLWEAPONEX_Shield_DualShields_A_3150a9b9-49a7-4345-aacb-d1670b6fa7a6", _Player)
THEN
PROC_LoopEffect("LLWEAPONEX_FX_EQ_Lizards_CombatShield_C", _Player, "LLWEAPONEX.CombatShield", "__ANY__", "LowerArm_R_Twist_Bone");

IF
ItemTemplateUnEquipped("WPN_LLWEAPONEX_Shield_DualShields_A_3150a9b9-49a7-4345-aacb-d1670b6fa7a6", _Player)
THEN
PROC_StopLoopEffect(_Player, "LLWEAPONEX.CombatShield");
*/

IF
GameStarted(_, 1)
THEN
CharacterLaunchOsirisOnlyIterator("LLWEAPONEX_Debug_SaveStartPosition");
ApplyStatus(CHARACTERGUID_Creatures_Troll_A_000_6a9cc5d0-827c-4d21-89a0-6c89e93e318d, "LLWEAPONEX_DUALSHIELDS_HUNKER_DOWN", -1.0, 1, CHARACTERGUID_Creatures_Troll_A_000_6a9cc5d0-827c-4d21-89a0-6c89e93e318d);
ApplyStatus(CHARACTERGUID_Humans_Male_RedFaction_Brute_001_f2e09090-0eb8-4d24-bf8c-32ca42cb42f3, "ENRAGED", 18.0, 1, CHARACTERGUID_Humans_Male_RedFaction_Brute_001_f2e09090-0eb8-4d24-bf8c-32ca42cb42f3);
CharacterSetFightMode(CHARACTERGUID_Humans_Male_RedFaction_Brute_001_f2e09090-0eb8-4d24-bf8c-32ca42cb42f3, 1, 1);

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Debug_SaveStartPosition")
AND
GetPosition(_Char, _x, _y, _z)
THEN
DB_LLWEAPONEX_Debug_StartPosition(_Char, _x, _y, _z);

IF
CharacterUsedItem(_Character, ITEMGUID_S_LLWEAPONEX_Debug_Level_ResetPos_000_4599b6eb-0afc-4870-9971-54c8b5375676)
AND
DB_LLWEAPONEX_Debug_StartPosition(CHARACTERGUID_Lizards_Hero_Male_004_3c81d65a-fc10-4785-aa2c-dc215fa7313f, _x, _y, _z)
THEN
TeleportToPosition(CHARACTERGUID_Lizards_Hero_Male_004_3c81d65a-fc10-4785-aa2c-dc215fa7313f, _x, _y, _z, "", 1, 0);

IF
CharacterUsedItem(_Character, ITEMGUID_PUZ_Lever_Floor_A_000_457bdc0e-ed46-4e46-a49f-51f65fac7c2c)
THEN
ApplyStatus(_Character, "RESTED", -12.0, 1, _Character);
SetStoryEvent(_Character, "LLWEAPONEX_Debug_KeepAliveTest");

IF
StoryEvent(_, "LeaderLib_Initialized")
THEN
ApplyStatus(CHARACTERGUID_Lizards_Hero_Male_000_e026f14d-6290-44c2-989d-984d03a42274, "LLWEAPONEX_DEBUG_IMMORTAL", -1.0, 1);
ApplyStatus(CHARACTERGUID_Lizards_Hero_Male_001_270b72cd-90e5-480e-9677-69040d566818, "LLWEAPONEX_DEBUG_IMMORTAL", -1.0, 1);
ApplyStatus(CHARACTERGUID_Lizards_Hero_Male_Undead_000_84f397e8-fdea-427a-a0ba-2e367a7eae45, "LLWEAPONEX_DEBUG_IMMORTAL", -1.0, 1);

//REGION RECON_COMMANDS
IF
TextEventSet("llweap_preset")
AND
GetTextEventParamString(1, _Preset)
AND
CharacterGetHostCharacter(_Host)
THEN
CharacterApplyPreset(_Host, _Preset);
CharacterTransform(_Host, "Humans_Hero_Male_Undead_5ab5d036-4606-4265-962e-c2e4d2d2408b", 0, 1, 0, 0, 0, 1, 0);
CharacterLevelUpTo(_Host, 5);
CharacterAddAttribute(_Host, "Intelligence", 5);
CharacterAddAttribute(_Host, "Strength", 5);
CharacterAddAttribute(_Host, "Finesse", 5);

IF
TextEventSet("llweap_die")
AND
CharacterGetHostCharacter(_Host)
THEN
CharacterDieImmediate(_Host, 0, "", _Host);

IF
TextEventSet("llweap_unsheathetest")
AND
CharacterGetHostCharacter(_Host)
THEN
ProcObjectTimer(_Host, "LLWEAPONEX_Timers_Debug_Unsheathe", 50);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLWEAPONEX_Timers_Debug_Unsheathe")
THEN
CharacterSetFightMode(_Player, 1, 1);
ProcObjectTimer(_Player, "LLWEAPONEX_Timers_Debug_Sheath", 50);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLWEAPONEX_Timers_Debug_Sheath")
THEN
CharacterSetFightMode(_Player, 0, 1);

IF
TextEventSet("llweap_removestatuses")
AND
CharacterGetHostCharacter(_Host)
THEN
RemoveHarmfulStatuses(_Host);

IF
TextEventSet("llweap_allrunetest")
AND
CharacterGetHostCharacter(_Host)
AND
DB_LLWEAPONEX_Statuses_Runes(_Status)
THEN
ApplyStatus(_Host, _Status, 30.0, 0, _Host);

IF
CharacterUsedItem(_Player, ITEMGUID_PUZ_Lever_Floor_A_001_f1ca3f98-a0ba-413e-a3ad-aba8469f91d9)
THEN
CharacterResurrect(CHARACTERGUID_DW_Voidling_A_000_a566d10b-0408-4ed6-8077-939d80d24326);
CharacterResurrect(CHARACTERGUID_DW_Voidling_A_001_2e67c698-6cfc-44f7-b001-49d45570eb19);
CharacterResurrect(CHARACTERGUID_DW_Voidling_A_002_86209bd5-f8c7-4ab9-936e-89cbf44139f1);
CharacterResurrect(CHARACTERGUID_DW_Voidling_A_003_9e6e10fd-89cb-48a0-8d04-256885f5aa15);
CharacterResurrect(CHARACTERGUID_DW_Voidling_A_004_4d7beedc-1c20-4307-9515-ab099d656f53);

IF
TextEventSet("llweap_recipes")
AND
CharacterGetHostCharacter(_Char)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX_99_Debug_TestLevel:llweap_recipes] Adding all WeaponEx recipes to host.");
CharacterUnlockRecipe(_Char, "GRN_LLWEAPONEX_Ingredient_Flask_Weakness_Air_A", 1);
CharacterUnlockRecipe(_Char, "GRN_LLWEAPONEX_Ingredient_Flask_Weakness_Chaos_A", 1);
CharacterUnlockRecipe(_Char, "GRN_LLWEAPONEX_Ingredient_Flask_Weakness_Earth_A", 1);
CharacterUnlockRecipe(_Char, "GRN_LLWEAPONEX_Ingredient_Flask_Weakness_Fire_A", 1);
CharacterUnlockRecipe(_Char, "GRN_LLWEAPONEX_Ingredient_Flask_Weakness_Poison_A", 1);
CharacterUnlockRecipe(_Char, "GRN_LLWEAPONEX_Ingredient_Flask_Weakness_Water_A", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Kevin_Clear_Nails", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Kevin_Clear_Oil", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Kevin_Clear_Poison", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Kevin_Nails", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Kevin_Oiled", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Kevin_Poisoned", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Quarterstaff_Crafted_Metal", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Quarterstaff_Crafted_Wood", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Runeblade_Inert_1H", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Runeblade_Inert_1H_Air", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Runeblade_Inert_1H_Chaos", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Runeblade_Inert_1H_Earth", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Runeblade_Inert_1H_Fire", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Runeblade_Inert_1H_Poison", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Runeblade_Inert_1H_Water", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Shuriken_Clear_Oil", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Shuriken_Clear_Poison", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Shuriken_Normal", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Shuriken_Oiled", 1);
CharacterUnlockRecipe(_Char, "LLWEAPONEX_Shuriken_Poisoned", 1);
CharacterUnlockRecipe(_Char, "LOOT_LLWEAPONEX_Orb_Thunder_A_Upgrade", 1);
CharacterUnlockRecipe(_Char, "LOOT_LLWEAPONEX_Orb_Thunder_B_Upgrade", 1);

IF
TextEventSet("llweap_uniquerecipes")
AND
CharacterGetHostCharacter(_Char)
THEN
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Anvil_Mace_2H_A_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Anvil_Mace_2H_A_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Anvil_Mace_2H_A_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Anvil_Mace_2H_A_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Anvil_Mace_2H_A_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Anvil_Mace_2H_A_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Anvil_Mace_2H_A_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Axe_1H_Throwable_A_Air_Anvil", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Axe_1H_Throwable_A_Fire_Bonfire", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Axe_1H_Throwable_A_Fire_Oven", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Axe_1H_Throwable_A_Oil", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Axe_1H_Throwable_A_Reset_Water", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Axe_1H_Throwable_A_Reset_Well", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Axe_1H_Throwable_A_Water_Anvil", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_Bible_B_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_Bible_B_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_Bible_B_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_Bible_B_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_Bible_B_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_Bible_B_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_Bible_B_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_SpellScroll_A_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_SpellScroll_A_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_SpellScroll_A_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_SpellScroll_A_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_SpellScroll_A_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_SpellScroll_A_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_BattleBook_2H_SpellScroll_A_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Blunderbuss_2H_A_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Blunderbuss_2H_A_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Blunderbuss_2H_A_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Blunderbuss_2H_A_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Blunderbuss_2H_A_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Blunderbuss_2H_A_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Blunderbuss_2H_A_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Greatbow_Lightning_A_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Greatbow_Lightning_A_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Greatbow_Lightning_A_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Greatbow_Lightning_A_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Greatbow_Lightning_A_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Greatbow_Lightning_A_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Greatbow_Lightning_A_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Axe_A_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Axe_A_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Axe_A_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Axe_A_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Axe_A_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Axe_A_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Axe_A_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Spear_A_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Spear_A_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Spear_A_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Spear_A_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Spear_A_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Spear_A_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Halberd_2H_Warchief_Spear_A_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Muramasa_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Muramasa_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Muramasa_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Muramasa_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Muramasa_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Muramasa_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Muramasa_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_1_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_1_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_1_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_1_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_1_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_1_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_1_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_2_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_2_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_2_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_2_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_2_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_2_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_2_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_3_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_3_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_3_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_3_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_3_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_3_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_3_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_Runeblade_Fire_1H_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_Runeblade_Fire_1H_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_Runeblade_Fire_1H_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_Runeblade_Fire_1H_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_Runeblade_Fire_1H_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_Runeblade_Fire_1H_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Katana_Runeblade_Fire_1H_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Quarterstaff_PowerPole_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Quarterstaff_PowerPole_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Quarterstaff_PowerPole_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Quarterstaff_PowerPole_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Quarterstaff_PowerPole_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Quarterstaff_PowerPole_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Quarterstaff_PowerPole_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_2_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_2_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_2_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_2_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_2_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_2_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_2_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_3_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_3_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_3_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_3_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_3_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_3_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_3_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Rapier_Runeblade_Water_1H_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Runeblade_ChaosEdge_2H_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Runeblade_ChaosEdge_2H_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Runeblade_ChaosEdge_2H_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Runeblade_ChaosEdge_2H_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Runeblade_ChaosEdge_2H_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Runeblade_ChaosEdge_2H_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Runeblade_ChaosEdge_2H_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_DeathEdge_A_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_DeathEdge_A_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_DeathEdge_A_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_DeathEdge_A_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_DeathEdge_A_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_DeathEdge_A_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_DeathEdge_A_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_SoulHarvest_A_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_SoulHarvest_A_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_SoulHarvest_A_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_SoulHarvest_A_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_SoulHarvest_A_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_SoulHarvest_A_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_SoulHarvest_A_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_DivineOrder_A_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_DivineOrder_A_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_DivineOrder_A_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_DivineOrder_A_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_DivineOrder_A_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_DivineOrder_A_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_DivineOrder_A_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_Dwarves_A_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_Dwarves_A_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_Dwarves_A_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_Dwarves_A_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_Dwarves_A_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_Dwarves_A_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Staff_Banner_Dwarves_A_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Sword_2H_Beholder_A_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Sword_2H_Beholder_A_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Sword_2H_Beholder_A_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Sword_2H_Beholder_A_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Sword_2H_Beholder_A_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Sword_2H_Beholder_A_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Sword_2H_Beholder_A_ToWit", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Wraithblade_2H_A_Reset", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Wraithblade_2H_A_ToCon", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Wraithblade_2H_A_ToFin", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Wraithblade_2H_A_ToInt", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Wraithblade_2H_A_ToMem", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Wraithblade_2H_A_ToStr", 1);
CharacterUnlockRecipe(_Char, "WPN_UNIQUE_LLWEAPONEX_Wraithblade_2H_A_ToWit", 1);

IF
TextEventSet("llweap_raizan_recipes")
AND
CharacterGetHostCharacter(_Host)
THEN
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_1_Reset", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_1_ToInt", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_1_ToFin", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_1_Upgrade", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_1_Upgrade_Int", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_1_Upgrade_Fin", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_2_Reset", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_2_ToInt", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_2_ToFin", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_2_Upgrade", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_2_Upgrade_Int", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_2_Upgrade_Fin", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_3_Reset", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_3_ToInt", 1);
CharacterUnlockRecipe(_Host, "WPN_UNIQUE_LLWEAPONEX_Katana_2H_Raizan_3_ToFin", 1);
CharacterUnlockRecipe(_Host, "LOOT_LLWEAPONEX_Orb_Thunder_A_Charge", 1);
CharacterUnlockRecipe(_Host, "LOOT_LLWEAPONEX_Orb_Thunder_B_Charge", 1);
//END_REGION

IF
CharacterUsedSkill(_Player, _, _, _)
AND
CharacterGetHostCharacter(_Player)
THEN
CharacterAddActionPoints(_Player, 2);

IF
CharacterStartAttackObject(_, _, _Player)
AND
CharacterGetHostCharacter(_Player)
THEN
CharacterAddActionPoints(_Player, 2);

//REGION ITEM_USAGE
IF
CharacterUsedItem(_Character, _Item)
AND
String(_Item, _ItemStr)
AND
//CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterUsedItem] [",_Name,"] used item [",_ItemStr,"].");

IF
CharacterUsedItemTemplate(_Character, _Template, _Item)
AND
String(_Item, _ItemStr)
AND
//CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterUsedItemTemplate] [",_Name,"] used item [",_ItemStr,"][",_Template,"].");

IF
CharacterUsedItemFailed(_Character, _Item)
AND
String(_Item, _ItemStr)
AND
//CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterUsedItemFailed] [",_Name,"] used item failed [",_ItemStr,"].");

IF
CanUseItem(_Character, _Item, _)
AND
String(_Item, _ItemStr)
AND
//CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CanUseItem] [",_Name,"] is about to use item [",_ItemStr,"].");

IF
ItemRemovedFromCharacter(_Item, _Character)
AND
String(_Item, _ItemStr)
AND
//CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:ItemRemovedFromCharacter] [",_Name,"] lost item [",_ItemStr,"].");

IF
CharacterStoppedUsingItem(_Character, _Item)
AND
String(_Item, _ItemStr)
AND
//CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterStoppedUsingItem] [",_Name,"] stopping using item [",_ItemStr,"].");

IF
ItemDestroying(_Item)
AND
String(_Item, _ItemStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:ItemDestroying] Item [",_ItemStr,"] was destroyed.");

IF
ItemDestroyed(_Item)
AND
String(_Item, _ItemStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:ItemDestroyed] Item [",_ItemStr,"] was destroyed.");

IF
ItemTemplateDestroyed(_Template, _Item)
AND
String(_Item, _ItemStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:ItemTemplateDestroyed] Item [",_ItemStr,"][",_Template,"] was destroyed.");
//END_REGION

//REGION ATTACK_TRACKING
IF
CharacterStartAttackObject(_Target, _Owner, _Attacker)
AND
String(_Target, _TargetStr)
AND
CharacterGetDisplayName(_Attacker, _, _Name)
AND
CharacterGetDisplayName(_Owner, _, _OwnerName)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterStartAttackObject] [",_Name,"](",_OwnerName,") is attacking [",_TargetStr,"].");
SetStoryEvent(_Target, "LLWEAPONEX_Debug_CheckDamageType");

IF
CharacterMissedBy(_Target, _Owner, _Attacker)
AND
String(_Target, _TargetStr)
AND
CharacterGetDisplayName(_Attacker, _, _Name)
AND
CharacterGetDisplayName(_Owner, _, _OwnerName)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterMissedBy] [",_Name,"](",_OwnerName,") missed [",_TargetStr,"].");

IF
CharacterCriticalHitBy(_Target, _Owner, _Attacker)
AND
String(_Target, _TargetStr)
AND
CharacterGetDisplayName(_Attacker, _, _Name)
AND
CharacterGetDisplayName(_Owner, _, _OwnerName)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterCriticalHitBy] [",_Name,"](",_OwnerName,") missed [",_TargetStr,"].");

IF
AttackedByObject(_Target, _Owner, _Attacker, _DamageType, _DamageSource)
AND
String(_Target, _TargetStr)
AND
String(_Attacker, _Name)
AND
String(_Owner, _OwnerName)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:AttackedByObject] DamageSource [",_DamageSource,"] [",_Name,"](",_OwnerName,") attacked [",_TargetStr,"].");
SetStoryEvent(_Target, "LLWEAPONEX_Debug_CheckDamageType");

IF
AttackedByObject(_Target, _Owner, _Attacker, _DamageType, "Attack")
AND
HasActiveStatus(_Target, "AOO", 1)
AND
HasActiveStatus(_Attacker, "AOO", 1)
AND
String(_Target, _TargetStr)
AND
String(_Attacker, _Name)
AND
String(_Owner, _OwnerName)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:AttackedByObject] Attack of Opportunity! [",_Name,"](",_OwnerName,") attacked [",_TargetStr,"].");

IF
AttackedByObject(_Target, NULL_00000000-0000-0000-0000-000000000000, _Attacker, _DamageType, _DamageSource)
AND
String(_Target, _TargetStr)
AND
String(_Attacker, _Name)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:AttackedByObject] DamageSource [",_DamageSource,"] [",_Name,"](No Owner) attacked [",_TargetStr,"].");

IF
CharacterReceivedDamage(_Target, _Percentage, _Attacker)
AND
String(_Target, _TargetStr)
AND
String(_Attacker, _Name)
AND
StringConcatenate("]% damage was done to [",_TargetStr, _Str1)
AND
StringConcatenate("] by [",_Name, _Str2)
AND
StringConcatenate(_Str1, _Str2, _Str3)
AND
StringConcatenate(_Str3, "].", _Suffix)
THEN
LeaderLog_LogInt("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterReceivedDamage] [",_Percentage, _Suffix);
SetStoryEvent(_Target, "LLWEAPONEX_Debug_CheckDamageType");

/*
IF
CharacterPhysicalHitBy(_Target, _Owner, _Attacker)
AND
String(_Target, _TargetStr)
AND
String(_Attacker, _Name)
AND
String(_Owner, _OwnerName)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterPhysicalHitBy] [",_Name,"](",_OwnerName,") attacked [",_TargetStr,"].");

IF
CharacterPhysicalHitBy(_Target, _Owner, _Attacker)
AND
HasActiveStatus(_Target, "AOO", 1)
AND
HasActiveStatus(_Attacker, "AOO", 1)
AND
String(_Target, _TargetStr)
AND
String(_Attacker, _Name)
AND
String(_Owner, _OwnerName)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterPhysicalHitBy] Attack of Opportunity! [",_Name,"](",_OwnerName,") attacked [",_TargetStr,"].");
*/
//END_REGION

//REGION STATUSES
IF
CharacterStatusApplied(_Character, "EXPLODE", _Causee)
AND
String(_Causee, _Cause)
AND
String(_Character, _Name)
AND
GetStatusTurns(_Character, "EXPLODE", _Turns)
AND
IntegertoString(_Turns, _TurnsStr)
THEN
LeaderLog_Log("DEBUG_STATUS", "[WeaponExpansion:Debug:CharacterStatusApplied] Status [EXPLODE] applied on [",_Name,"] via [",_Cause,"] for (",_TurnsStr,") turns.");

IF
CharacterStatusRemoved(_Character, _Status, _Causee)
AND
String(_Causee, _Cause)
AND
//CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_STATUS", "[WeaponExpansion:Debug:CharacterStatusRemoved] Status [",_Status,"] removed from [",_Name,"] via [",_Cause,"].");

IF
ItemStatusAttempt(_Item, _Status, _Causee)
AND
String(_Causee, _Cause)
AND
String(_Item, _Name)
THEN
LeaderLog_Log("DEBUG_STATUS", "[WeaponExpansion:Debug:ItemStatusAttempt] Status [",_Status,"] attempt on [",_Name,"] via [",_Cause,"].");

IF
ItemStatusAttempt(_Item, "SUMMONING", _)
AND
ItemGetOwner(_Item, _Owner)
AND
String(_Owner, _Cause)
AND
String(_Item, _Name)
THEN
LeaderLog_Log("DEBUG_STATUS", "[WeaponExpansion:Debug:ItemStatusAttempt] Status [SUMMONING] attempt on [",_Name,"] with owner [",_Cause,"].");

IF
ItemStatusChange(_Item, _Status, _Causee)
AND
String(_Causee, _Cause)
AND
String(_Item, _Name)
THEN
LeaderLog_Log("DEBUG_STATUS", "[WeaponExpansion:Debug:ItemStatusChange] Status [",_Status,"] applied on [",_Name,"] via [",_Cause,"].");

IF
ItemStatusRemoved(_Item, _Status, _Causee)
AND
String(_Causee, _Cause)
AND
String(_Item, _Name)
THEN
LeaderLog_Log("DEBUG_STATUS", "[WeaponExpansion:Debug:ItemStatusRemoved] Status [",_Status,"] removed from [",_Name,"] via [",_Cause,"].");

IF
CharacterKilledBy(_Defender, _Owner, _Attacker)
AND
CharacterGetDisplayName(_Defender, _, _Name)
AND
String(_Owner, _Name2)
AND
String(_Attacker, _Name3)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterKilledBy] [",_Name,"] was killed by [",_Name2,"](",_Name3,").");

IF
CharacterPrecogDying(_Character)
AND
//CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterPrecogDying] [",_Name,"] is about to die.");

IF
CharacterDying(_Character)
AND
//CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterDying] [",_Name,"] is dying.");

IF
CharacterDied(_Character)
AND
//CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterDied] [",_Name,"] died.");

IF
CharacterStatusAttempt(_Character, _Status, _Causee)
//AND
//CharacterGetHostCharacter(_Causee)
AND
//CharacterGetDisplayName(_Causee, _, _Cause)
String(_Causee, _Cause)
AND
////CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_STATUS", "[WeaponExpansion:Debug:CharacterStatusAttempt] Status [",_Status,"] attempt on [",_Name,"] via [",_Cause,"].");

IF
CharacterStatusApplied(_Character, _Status, _Causee)
//AND
//haracterGetHostCharacter(_Causee)
AND
//CharacterGetDisplayName(_Causee, _, _Cause)
String(_Causee, _Cause)
AND
////CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_STATUS", "[WeaponExpansion:Debug:CharacterStatusApplied] Status [",_Status,"] applied on [",_Name,"] via [",_Cause,"].");

IF
CharacterStatusRemoved(_Character, _Status, _)
AND
////CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_STATUS", "[WeaponExpansion:Debug:CharacterStatusRemoved] Status [",_Status,"] removed from [",_Name,"].");

IF
ItemStatusAttempt(_Item, _Status, (CHARACTERGUID)_Causee)
//AND
//CharacterGetHostCharacter(_Causee)
AND
CharacterGetDisplayName(_Causee, _, _Cause)
AND
GetTemplate(_Item, _Name)
THEN
LeaderLog_Log("DEBUG_STATUS", "[WeaponExpansion:Debug:ItemStatusAttempt] Status [",_Status,"] attempt on [",_Name,"] via [",_Cause,"].");

IF
ItemStatusChange(_Item, _Status, (CHARACTERGUID)_Causee)
//AND
//CharacterGetHostCharacter(_Causee)
AND
CharacterGetDisplayName(_Causee, _, _Cause)
AND
GetTemplate(_Item, _Name)
THEN
LeaderLog_Log("DEBUG_STATUS", "[WeaponExpansion:Debug:ItemStatusChange] Status [",_Status,"] applied on [",_Name,"] via [",_Cause,"].");

IF
ItemStatusRemoved(_Item, _Status, _)
AND
GetTemplate(_Item, _Name)
THEN
LeaderLog_Log("DEBUG_STATUS", "[WeaponExpansion:Debug:ItemStatusRemoved] Status [",_Status,"] removed from [",_Name,"].");

IF
CharacterTeleported(_Character, _, _x, _y, _z, _tx, _ty, _tz, _Skill)
AND
//CharacterGetDisplayName(_Character, _, _Name)
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:CharacterTeleported] Character [",_Name,"] teleported via [",_Skill,"].");
//END_REGION

//REGION SKILL_DEBUG

IF
CharacterUsedSkill(_Caster, _Skill, _SkillType, _SkillElement)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
LeaderLog_QRY_Log("COMBINE","[",_Name,"] cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")].")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:CharacterUsedSkill] ", _LogDetails);

IF
CharacterUsedSkillOnTarget(_Caster, _Target, _Skill, _SkillType, _SkillElement)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
GetUUID(_Target, _TargetID)
AND
LeaderLog_QRY_Log("COMBINE","[",_Name,"] cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")] on target [", _TargetID, "].")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:CharacterUsedSkillOnTarget] ", _LogDetails);

IF
CharacterUsedSkillAtPosition(_Caster, _XReal, _YReal, _ZReal, _Skill, _SkillType, _SkillElement)
AND
Integer(_XReal, _TargetX)
AND
Integer(_YReal, _TargetY)
AND
Integer(_ZReal, _TargetZ)
AND
GetPosition(_Caster, _XCastReal, _YCastReal, _ZCastReal)
AND
Integer(_XCastReal, _CastX)
AND
Integer(_YCastReal, _CastY)
AND
Integer(_ZCastReal, _CastZ)
AND
IntegertoString(_TargetX, _TargetXStr)
AND
IntegertoString(_TargetY, _TargetYStr)
AND
IntegertoString(_TargetZ, _TargetZStr)
AND
IntegertoString(_CastX, _CastXStr)
AND
IntegertoString(_CastY, _CastYStr)
AND
IntegertoString(_CastZ, _CastZStr)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
LeaderLog_QRY_Log("COMBINE","[",_Name,"] cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")] from position [")
AND
DB_LeaderLog_Temp_CombinedString(_SkillPrefix)
AND
LeaderLog_QRY_ClearCombinedString(_SkillPrefix)
AND
LeaderLog_QRY_Log("COMBINE",_CastXStr,",",_CastYStr,",",_CastZStr,"] to target position [")
AND
DB_LeaderLog_Temp_CombinedString(_CasterPosition)
AND
LeaderLog_QRY_ClearCombinedString(_CasterPosition)
AND
LeaderLog_QRY_Log("COMBINE",_TargetXStr,",",_TargetYStr,",",_TargetZStr,"].")
AND
DB_LeaderLog_Temp_CombinedString(_TargetPosition)
AND
LeaderLog_QRY_ClearCombinedString(_TargetPosition)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:CharacterUsedSkillAtPosition] ", _SkillPrefix, _CasterPosition, _TargetPosition);

IF
CharacterUsedSkillOnZoneWithTarget(_Caster, _Target, _Skill, _SkillType, _SkillElement)
AND
ObjectIsCharacter((CHARACTERGUID)_Target, 1)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
CharacterGetDisplayName(_Target, _, _TargetName)
AND
GetUUID(_Caster, _CasterID)
AND
GetUUID(_Target, _TargetID)
AND
LeaderLog_QRY_Log("COMBINE"," cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")] on target [",_TargetName,"](",_TargetID,").")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:CharacterUsedSkillOnZoneWithTarget] [",_Name,"](",_CasterID,")",_LogDetails);

IF
CharacterUsedSkillOnZoneWithTarget(_Caster, _Target, _Skill, _SkillType, _SkillElement)
AND
ObjectIsItem((ITEMGUID)_Target, 1)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
GetUUID(_Caster, _CasterID)
AND
GetUUID(_Target, _TargetID)
AND
LeaderLog_QRY_Log("COMBINE"," cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")] on target [Item](",_TargetID,").")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:CharacterUsedSkillOnZoneWithTarget] [",_Name,"](",_CasterID,")",_LogDetails);

IF
SkillCast(_Caster, _Skill, _SkillType, _SkillElement)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
LeaderLog_QRY_Log("COMBINE","[",_Name,"] cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")]")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:SkillCast] ", _LogDetails);

//END_REGION

//REGION SURFACES
IF
CharacterStatusApplied(_Character, "INSURFACE", _)
AND
GetSurfaceGroundAt(_Character, _Surface)
AND
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:INSURFACE] [",_Name,"] entered ground surface [",_Surface,"].");

IF
CharacterStatusApplied(_Character, "INSURFACE", _)
AND
GetSurfaceCloudAt(_Character, _Surface)
AND
String(_Character, _Name)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[WeaponExpansion:Debug:INSURFACE] [",_Name,"] entered cloud surface [",_Surface,"].");
//END_REGION

//REGION FORCE_TRACE
IF
CharacterStatusRemoved(_Character, "SHOCKWAVE", _)
AND
GetPosition(_Character, _x, _y, _z)
AND
String(_Character, _Name)
AND
StringConcatenate("[WeaponExpansion:Debug:SHOCKWAVE] SHOCKWAVE was removed from [",_Name, _Str1)
AND
StringConcatenate(_Str1, "] Position: ", _Prefix)
THEN
LeaderLog_TracePosition(_Character, _Prefix, "");
//END_REGION

//Quicker recharging
IF
CharacterStatusApplied(_Player, "LLWEAPONEX_REMOTEMINE_ADD_RECHARGE", _)
THEN
RemoveStatus(_Player, "LLWEAPONEX_REMOTEMINE_ADD_RECHARGE");

IF
TextEventSet("llweap_lockdoors")
THEN
ItemCloseAndLock(ITEMGUID_DOORS_Humans_Ruins_Metal_A_000_20d4e781-3bd3-433a-8a3c-5263dd6c8a59, "NOKEY");
ItemCloseAndLock(ITEMGUID_DOORS_Humans_Ruins_A_000_9416b0d1-f563-4f5d-8f3d-03d46e550c85, "NOKEY");

IF
GameStarted(_,_)
THEN
ItemCloseAndLock(ITEMGUID_DOORS_Humans_Ruins_Metal_A_000_20d4e781-3bd3-433a-8a3c-5263dd6c8a59, "NOKEY");
ItemCloseAndLock(ITEMGUID_DOORS_Humans_Ruins_A_000_9416b0d1-f563-4f5d-8f3d-03d46e550c85, "NOKEY");

PROC
ProcClearGeneratedItems((CHARACTERGUID)_Npc)
AND
String(_Npc, _Str)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX_99_Debug_TestLevel:ProcClearGeneratedItems] Clearing generated items for [",_Str,"]");

IF
ItemTemplateCombinedWithItemTemplate(_,_,_,_,_,_Player, _Item)
AND
String(_Item, _Str)
AND
GetTemplate(_Item, _Template)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX_99_Debug_TestLevel:ItemTemplateCombinedWithItemTemplate] Item was combined: [",_Str,"] Template (",_Template,").");

IF
ItemTemplateCombinedWithItemTemplate(_,_,_,_,_,_Player, _Item)
AND
GlobalGetFlag("LeaderLib_TS_GrowthEvents_Item_Enabled", _Enabled)
AND
SysStatus("LeaderLib_19_TS_GrowthEvents_Item", _Status)
AND
IntegertoString(_Status, _GoalStatusStr)
AND
IntegertoString(_Enabled, _EnabledStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:LLWEAPONEX_Debug_CheckToggleScripts] Goal[LeaderLib_19_TS_GrowthEvents_Item] Status[",_GoalStatusStr,"] Flag [LeaderLib_TS_GrowthEvents_Item_Enabled] Enabled [",_EnabledStr,"].");

IF
GameStarted(_,1)
THEN
TimerLaunch("LLWEAPONEX_Debug_CheckToggleScripts", 500);

IF
TimerFinished("LLWEAPONEX_Debug_CheckToggleScripts")
AND
DB_LeaderLib_ToggleScripts_Registered(_Goal, _Flag)
AND
GlobalGetFlag(_Flag, _Enabled)
AND
SysStatus(_Goal, _Status)
AND
IntegertoString(_Status, _GoalStatusStr)
AND
IntegertoString(_Enabled, _EnabledStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:LLWEAPONEX_Debug_CheckToggleScripts] Goal[",_Goal,"] Status[",_GoalStatusStr,"] Flag [",_Flag,"] Enabled [",_EnabledStr,"].");

IF
TextEventSet("llweap_lockfix")
AND
DB_IsPlayer(_Char)
AND
DB_LeaderLib_EquipmentSlots(_Slot)
AND
CharacterGetEquippedItem(_Char, _Slot, (ITEMGUID)_Item)
THEN
ItemLockUnEquip(_Item, 0);

IF
TextEventSet("llweap_purgetest")
AND
CharacterGetHostCharacter(_Char)
THEN
CharacterUseSkill(_Char, "Shout_InspireStart", _Char, 0, 1, 1);
ProcObjectTimer(_Char, "LLWEAPONEX_Timers_Debug_PurgeQueue", 250);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "LLWEAPONEX_Timers_Debug_PurgeQueue")
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX_99_Debug_TestLevel:llweap_purgetest] Purged queue");
CharacterPurgeQueue(_Char);
//PlayAnimation(_Char, "noprepare");
//PlayAnimation(_Char, "");

/*
IF
CharacterUsedSkill(_Char, _, _, _)
THEN
CharacterStatusText(_Char, "Set Reaction");
CharacterSetReactionPriority(_Char, "LLWEAPONEX_Interrupt", 999999);
*/

/*
IF
CharacterStatusApplied(_Char, "LLWEAPONEX_DEBUG_TESTMISC", _)
THEN
CharacterUseSkill(_Char, "Target_LLWEAPONEX_Debug_SingleHandedAttack", _Char, 1, 1, 1);
*/

//REGION COMBINE_TRACE
IF
CanCombineItem(_Char, _ItemA, _ItemB, _ItemC, _ItemD, _ItemE, _RequestID)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[CanCombineItem] ","Test","Test","Test","Test","Test","Test","Test","Test","Test","Test","Test","Test","Test","Test",".");

IF
CanCombineItem(_Char, _ItemA, _ItemB, _ItemC, _ItemD, _ItemE, _RequestID)
AND
String(_Char, _Str1)
AND
String(_ItemA, _Str2)
AND
String(_ItemB, _Str2)
AND
String(_ItemC, _Str3)
AND
String(_ItemD, _Str4)
AND
String(_ItemE, _Str5)
AND
IntegertoString(_RequestID, _Str6)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[CanCombineItem] Request[",_Str6,"] Character [",_Str1,"] is combining [",_Str2,"][",_Str3,"][",_Str4,"][",_Str5,"].");

IF
CanCombineItem(_Char, _ItemA, _ItemB, _ItemC, _ItemD, _ItemE, _RequestID)
AND
String(_Char, _Str1)
AND
String(_ItemA, _Str2)
AND
IntegertoString(_RequestID, _Str6)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[CanCombineItem] Request[",_Str6,"] Character [",_Str1,"] is combining _ItemA [",_Str2,"].");

IF
CanCombineItem(_Char, _ItemA, _ItemB, _ItemC, _ItemD, _ItemE, _RequestID)
AND
String(_Char, _Str1)
AND
String(_ItemB, _Str2)
AND
IntegertoString(_RequestID, _Str6)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[CanCombineItem] Request[",_Str6,"] Character [",_Str1,"] is combining _ItemB [",_Str2,"].");

IF
CanCombineItem(_Char, _ItemA, _ItemB, _ItemC, _ItemD, _ItemE, _RequestID)
AND
String(_Char, _Str1)
AND
String(_ItemC, _Str2)
AND
IntegertoString(_RequestID, _Str6)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[CanCombineItem] Request[",_Str6,"] Character [",_Str1,"] is combining _ItemC [",_Str2,"].");

IF
CanCombineItem(_Char, _ItemA, _ItemB, _ItemC, _ItemD, _ItemE, _RequestID)
AND
String(_Char, _Str1)
AND
String(_ItemD, _Str2)
AND
IntegertoString(_RequestID, _Str6)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[CanCombineItem] Request[",_Str6,"] Character [",_Str1,"] is combining _ItemD [",_Str2,"].");

IF
CanCombineItem(_Char, _ItemA, _ItemB, _ItemC, _ItemD, _ItemE, _RequestID)
AND
String(_Char, _Str1)
AND
String(_ItemE, _Str2)
AND
IntegertoString(_RequestID, _Str6)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[CanCombineItem] Request[",_Str6,"] Character [",_Str1,"] is combining _ItemE [",_Str2,"].");

IF
ItemTemplateCombinedWithItemTemplate(_Str1, _Str2, _Str3, _Str4, _Str5, _Char, _Item)
AND
String(_Char, _CharStr)
AND
String(_Item, _ItemStr)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[ItemTemplateCombinedWithItemTemplate] Character [",_CharStr,"] Result[",_ItemStr,"] Combined [",_Str1,"][",_Str2,"][",_Str3,"][",_Str4,"][",_Str5,"].");
//END_REGION

/*
QRY
MyMod_QRY_ItemIsWeapon((CHARACTERGUID)_Char, (ITEMGUID)_Item)
AND
NOT CharacterGetEquippedShield(_Char, _Item) // Not a shield
AND
CharacterGetEquippedItem(_Char, "Weapon", _Item)
THEN
DB_NOOP(1);

QRY
MyMod_QRY_ItemIsWeapon((CHARACTERGUID)_Char, (ITEMGUID)_Item)
AND
NOT CharacterGetEquippedShield(_Char, _Item)
AND
CharacterGetEquippedItem(_Char, "Shield", _Item)
THEN
DB_NOOP(1);

IF
ItemEquipped(_Item, _Char)
AND
DB_IsPlayer(_Char) // If you want this to only run for players/party members
AND
MyMod_QRY_ItemIsWeapon(_Char, _Item)
THEN
SetStoryEvent(_Char, "LLWEAPONEX_CheckWeaponType");
DB_MyMod_EquippedWeapon(_Char, _Item);

IF
ItemUnEquipped(_Item, _Char)
AND
DB_MyMod_EquippedWeapon(_Char, _Item)
THEN
NOT DB_MyMod_EquippedWeapon(_Char, _Item);
SetStoryEvent(_Char, "LLWEAPONEX_CheckWeaponType");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_WeaponTypeFound_Crossbow")
THEN
CharacterStatusText(_Char, "Ranged Weapon");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_WeaponTypeFound_Bow")
THEN
CharacterStatusText(_Char, "Ranged Weapon");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_WeaponTypeFound_Wand")
THEN
CharacterStatusText(_Char, "Ranged Weapon");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_WeaponTypeFound_Unarmed")
THEN
CharacterStatusText(_Char, "No Ranged Weapon");
*/

/*
IF
SkillCast(_Char, "Projectile_EnemyFireball", _, _)
THEN
//CharacterSetStill(_Char);
//CharacterSetAnimationOverride(_Char, "still");
ProcObjectTimer(_Char, "LLWEAPONEX_Timers_Debug_SetStillTest", 500);
CharacterUseSkill(_Char, "Shout_LeaderLib_ClearQueue", _Char, 1, 1, 1);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "LLWEAPONEX_Timers_Debug_SetStillTest")
THEN
//CharacterFlushQueue(_Char);
CharacterUseSkill(_Char, "Shout_InspireStart", _Char, 0, 1, 1);
*/



IF
SkillCast(_Char, "Shout_InspireStart", _, _)
AND
NOT DB_LLWEAPONEX_Debug_Temp_ShoutTest(_Char, _)
THEN
DB_LLWEAPONEX_Debug_Temp_ShoutTest(_Char, 5);
LeaderLib_Timers_StartObjectTimer(_Char, 200, "LLWEAPONEX_Timers_Debug_InspireCast", "LLWEAPONEX_Timers_Debug_InspireCast");

IF
CharacterUsedSkill(_Char, "Shout_InspireStart", _, _)
AND
DB_LLWEAPONEX_Debug_Temp_ShoutTest(_Char, _Casts)
AND
_Casts > 0
THEN
LeaderLib_Timers_StartObjectTimer(_Char, 200, "LLWEAPONEX_Timers_Debug_InspireCast", "LLWEAPONEX_Timers_Debug_InspireCast");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Timers_Debug_InspireCast")
AND
DB_LLWEAPONEX_Debug_Temp_ShoutTest(_Char, _Casts)
AND
_Casts > 0
AND
IntegerSubtract(_Casts, 1, _Next)
AND
GetPosition(_Char, _x, _y, _z)
THEN
NOT DB_LLWEAPONEX_Debug_Temp_ShoutTest(_Char, _Casts);
DB_LLWEAPONEX_Debug_Temp_ShoutTest(_Char, _Next);
LeaderLog_LogInt("DEBUG", "[LLWEAPONEX_99_Debug_TestLevel:InspireTest] Casts left: (", _Next, ")");
CharacterPurgeQueue(_Char);
CharacterMoveToPosition(_Char, _x, _y, _z, 1, "LLWEAPONEX_Debug_CastNextInspire");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Debug_CastNextInspire")
AND
DB_LLWEAPONEX_Debug_Temp_ShoutTest(_Char, 4)
THEN
CharacterUseSkill(_Char, "Shout_InspireStart", _Char, 1, 1, 1);


IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Debug_CastNextInspire")
AND
DB_LLWEAPONEX_Debug_Temp_ShoutTest(_Char, _Next)
AND
_Next < 4
THEN
//CharacterUseSkill(_Char, "Shout_InspireStart", _Char, 1, 1, 1);
LeaderLib_Timers_StartObjectTimer(_Char, 200, "LLWEAPONEX_Timers_Debug_InspireCast", "LLWEAPONEX_Timers_Debug_InspireCast");

IF
TextEventSet("llweap_surfaceindextest")
AND
CharacterGetHostCharacter(_Host)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX:Debug:SurfaceInt] Integer: (-1)");
SetVarInteger(_Host, "LLWEAPONEX_Debug_SurfaceInt", -1);
SetStoryEvent(_Host, "LLWEAPONEX_Debug_SurfaceIndexTest");

IF
StoryEvent(_Host, "LLWEAPONEX_Debug_SurfaceIndexTest_Next")
AND
GetVarInteger(_Host, "LLWEAPONEX_Debug_SurfaceInt", _Int)
AND
_Int < 83
AND
IntegerSum(_Int, 1, _NextInt)
THEN
LeaderLog_LogInt("DEBUG", "[LLWEAPONEX:Debug:SurfaceInt] Integer: (",_NextInt,")");
SetVarInteger(_Host, "LLWEAPONEX_Debug_SurfaceInt", _NextInt);
SetStoryEvent(_Host, "LLWEAPONEX_Debug_SurfaceIndexTest");

QRY
LLWEAPONEX_Debug_QRY_HasTwoHandedWeapon((CHARACTERGUID)_Character)
AND
CharacterGetEquippedItem(_Character, "Weapon", _Item)
AND
CharacterGetEquippedItem(_Character, "Shield", _Item)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Debug_QRY_HasTwoHandedWeapon((CHARACTERGUID)_Character)
AND
CharacterGetEquippedItem(_Character, "Weapon", _Item)
AND
CharacterGetEquippedItem(_Character, "Shield", _Item)
THEN
DB_NOOP(1);

IF
TextEventSet("llweap_handedness")
AND
CharacterGetHostCharacter(_Char)
AND
LLWEAPONEX_Debug_QRY_HasTwoHandedWeapon(_Char)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX_99_Debug_TestLevel:TextEventSet(llweap_handedness)] Weapon is two-handed");

IF
TextEventSet("llweap_handedness")
AND
CharacterGetHostCharacter(_Char)
AND
NOT LLWEAPONEX_Debug_QRY_HasTwoHandedWeapon(_Char)
AND
LeaderLib_Helper_QRY_WeaponIsEquipped(_Char)
THEN
LeaderLog_Log("DEBUG_EVENTS", "[LLWEAPONEX_99_Debug_TestLevel:TextEventSet(llweap_handedness)] Weapon is one-handed.");

IF
TextEventSet("llweap_shoottest")
AND
CharacterGetHostCharacter(_Char)
THEN
CharacterSetAnimationOverride(_Char, "Fumble_01");
LeaderLib_Timers_StartObjectTimer(_Char, 1370, "Timers_LLWEAPONEX_Debug_StopFumbleOverride", "LLWEAPONEX_Debug_StopFumbleOverride");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Debug_StopFumbleOverride")
THEN
CharacterSetAnimationOverride(_Char, "");
PlayAnimation(_Char, "still");

IF
TextEventSet("llweap_levelupitems")
AND
CharacterGetHostCharacter(_Char)
AND
CharacterGetLevel(_Char, _Level)
AND
DB_LeaderLib_EquipmentSlots(_Slot)
AND
CharacterGetEquippedItem(_Char, _Slot, (ITEMGUID)_Item)
THEN
ItemLevelUpTo(_Item, _Level);

/*
IF
StoryEvent(_, "LeaderLib_Initialized")
THEN
//ItemLaunchIterator("LLWEAPONEX_Debug_Iterator_CheckTemplate");
LeaderLib_SendEvent("LLWEAPONEX_Debug_StartItemIterator");
TimerLaunch("Timers_LLWEAPONEX_Debug_InitLevelItems", 250);

IF
StoryEvent((ITEMGUID)_Item, "LLWEAPONEX_Debug_Iterator_CheckTemplate")
AND
NOT ItemIsInInventory(_Item, 1)
AND
ObjectIsGlobal(_Item, 0)
AND
String(_Item, _ItemStr)
THEN
NRD_ModCall("WeaponExpansion", "LLWEAPONEX_Ext_Debug_CleanLevelItem", _ItemStr);

IF
TimerFinished("Timers_LLWEAPONEX_Debug_InitLevelItems")
THEN
NRD_ModCall("WeaponExpansion", "LLWEAPONEX_Ext_Debug_Init");
*/

/*
Harcoded colors:
#FFFFFF
#454545
#AE9F95
#DBDBDB
#CD1F1F
#188EDE
#078FC8
#CFECFF
#7DC807
#00AA00
#FCD203
#FF9600
#FFC3C3
#7F00FF
#B97A57
#C7A758
#000000
#FFFFFF
#D040D0
#797980
#65C900
#F7BA14
#7D71D9
#4197E2
#FE6E27
#46B195
#B823CB
#F7BA14
#81AB00
#639594
#B260FF
#73F6FF
#DA2512
#C9AA58
#97FBFF
#FFB8B8
#FFAB00
#7F00FF
#F10000
#00893A
#403625
#00547F
#FFFFFF
#9A6A46
#745035
#AA3938
#ED9D07
#FCD203
#88A25B
#34789C
#D66565
#D85B00
#E4CE93
#CD1F1F
#318666
#3C6983
#85662F
#87365C
#F1D466
#008858
#CD1F1F
#13D177
#FCD203
#188EDE
*/
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_99_Debug"
